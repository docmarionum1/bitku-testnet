{"version":3,"sources":["config.js","cadence/scripts.js","hooks/useCurrentUser.js","cadence/transactions.js","components/AuthCluster.js","components/Mint.js","components/Haikus.js","App.js","reportWebVitals.js","index.js"],"names":["console","log","process","config","put","FEATURED_ADDRESS","LOGO_URL","contract_address","GET_NEXT_ID_AND_PRICE","getNextIDAndPrice","a","fcl","then","response","id","Object","keys","parseInt","price","GET_HAIKUS","getHaikus","haikus","t","key","value","getBalance","user","addr","getUserHaikus","UserStateContext","React","createContext","UserStateProvider","children","useState","balance","setBalance","userHaikus","setUserHaikus","Provider","useCurrentUser","loggedIn","setUser","useContext","useEffect","subscribe","updateBalance","useCallback","MINT_HAIKU_TRANSACTION","mintHaikuTransaction","nextHaiku","txId","onceSealed","SETUP_FUSD_VAULT","setupFUSDVaultTransaction","useStyles","makeStyles","theme","root","display","justifyContent","padding","spacing","button","about","color","AuthCluster","classes","menuAnchor","setMenuAnchor","handleClose","className","Typography","variant","href","target","Fragment","Button","onClick","event","currentTarget","Menu","anchorEl","keepMounted","open","onClose","MenuItem","disabled","height","flexDirection","popper","top","zIndex","tooltip","fontSize","maxWidth","link","Mint","setError","setNextHaiku","loading","setLoading","haiku","setHaiku","rampMinPurchaseAmount","setRampMinPurchaseAmount","fetch","json","assets","fusd","filter","asset","symbol","priceEur","minPurchaseAmountEur","fetchFUSDInfo","mintHaiku","window","scrollTo","text","mintingDisabled","tooltipTitle","RampInstantSDK","hostAppName","hostLogoUrl","swapAmount","Math","ceil","max","pow","swapAsset","userAddress","fiatCurrency","show","toFixed","typing","fixed","Tooltip","interactive","title","placement","arrow","marginBottom","paper","borderRadius","skeletonContainer","flexGrow","skeleton","margin","Haikus","heading","order","ids","Grid","container","map","item","xs","sm","md","lg","Paper","elevation","Skeleton","animation","width","createMuiTheme","typography","fontFamily","join","h6","textAlign","textDecoration","fontWeight","h4","body2","whiteSpace","shape","App","error","snackbarOpen","setSnackbarOpen","typingEnd","setTypingEnd","featuredAddress","featuredIds","featuredHaikus","setFeaturedHaikus","handleErrorClose","requestedHaikus","push","getText","CssBaseline","ThemeProvider","Container","onTypingEnd","Snackbar","autoHideDuration","Alert","severity","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAEAA,QAAQC,IAAIC,2SAEZC,cACGC,IAAI,iBAAkBF,qCACtBE,IAAI,sBAAuBF,kDAGvB,IAAIG,EAAmB,GACnBC,EAAW,GAedC,EAAmB,qBACzBJ,cACGC,IAAI,yBAA0B,sBAC9BA,IAAI,iBAAkB,sBACtBA,IAAI,4BAA6B,sBACjCA,IAAI,oBAAqBG,GACzBH,IAAI,gBAAiB,sBAExBC,EAAmBE,EACnBD,EAAW,wC,+MC/BAE,EAAqB,oJAS3B,SAAeC,IAAtB,+B,4CAAO,8BAAAC,EAAA,sEACkBC,IACjB,CACJA,IAAWH,KAEZI,KAAKD,KALD,cACCE,EADD,OAOCC,EAAKC,OAAOC,KAAKH,GAAU,GAP5B,kBAQE,CACLC,GAAIG,SAASH,GACbI,MAAOL,EAASC,KAVb,4C,sBAcA,IAaMK,EAAU,olBAkBhB,SAAeC,EAAtB,kC,4CAAO,WAAyBC,GAAzB,SAAAX,EAAA,sEACQC,IACL,CACJA,IAAWQ,GACXR,IAAS,CACPA,IAAQU,EAAQC,IAAa,CAACC,IAAKD,IAAUE,MAAOF,WAKvDV,KAAKD,KAVH,oF,sBAaA,SAAec,EAAtB,kC,4CAAO,WAA0BC,GAA1B,SAAAhB,EAAA,sEACQC,IACP,CACJA,IADI,2dAeJA,IAAS,CACPA,IAAQe,EAAKC,KAAML,SAGtBV,KAAKD,KArBD,oF,sBAwBA,SAAeiB,EAAtB,kC,4CAAO,WAA6BF,GAA7B,SAAAhB,EAAA,sEACQC,IACP,CACJA,IADI,usBAoBJA,IAAS,CACPA,IAAQe,EAAKC,KAAML,SAGtBV,KAAKD,KA1BD,oF,iCC1FDkB,EAAmBC,IAAMC,gBAExB,SAASC,EAAT,GAAwC,IAAZC,EAAW,EAAXA,SACjC,EAA8BC,mBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEA,OAAO,cAACT,EAAiBU,SAAlB,CAA2Bf,MAAO,CAACW,UAASC,aAAYC,aAAYC,iBAAgBL,SAAUA,IAGhG,SAASO,IACd,MAAwBN,mBAAS,CAACO,SAAU,OAA5C,mBAAOf,EAAP,KAAagB,EAAb,KACA,EAAyDC,qBAAWd,GAA7DM,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,WAAYC,EAA5B,EAA4BA,WAAYC,EAAxC,EAAwCA,cAExCM,qBAAU,kBAAMjC,MAAkBkC,UAAUH,KAAU,IAEtD,IAAMI,EAAgBC,sBAAW,sBAAC,4BAAArC,EAAA,+EAERe,EAAWC,GAFH,OAExBS,EAFwB,OAG9BC,EAAWD,GAHmB,gDAK9BC,EAAW,MALmB,yDAO/B,CAACV,IAyBJ,OAvBAkB,qBAAU,WACJlB,EAAKe,SACPK,IAEAV,EAAW,KAEZ,CAACV,IAEJkB,qBAAU,WAAM,4CACd,4BAAAlC,EAAA,+EAEyBkB,EAAcF,GAFvC,OAEUL,EAFV,OAGIiB,EAAcjB,GAHlB,wGADc,sBAQVK,EAAKe,SARM,WAAD,wBASZrB,GAEAkB,EAAc,MAEf,CAACZ,IAEG,CAACA,OAAMS,UAASW,gBAAeT,aAAYC,iBAGrCE,Q,2BCnDFQ,EAAsB,4oEAoD5B,SAAeC,EAAtB,kC,4CAAO,WAAoCC,GAApC,eAAAxC,EAAA,sEACcC,IAAS,CAC1BA,IAAgBqC,GAChBrC,IAAS,CACPA,IAAQuC,EAAUpC,GAAIQ,KACtBX,IAAQuC,EAAUhC,MAAOI,OAE3BX,IAAUA,KACVA,IAAaA,KACbA,IAAmB,CAACA,MACpBA,IAAU,QAEXC,KAAKD,KAZD,cACCwC,EADD,yBAcExC,IAAOwC,GAAMC,cAdf,4C,sBAkBA,IAAMC,EAAgB,07BAiCtB,SAAeC,IAAtB,+B,4CAAO,4BAAA5C,EAAA,sEACcC,IAAS,CAC1BA,IAAgB0C,GAChB1C,IAAUA,KACVA,IAAaA,KACbA,IAAmB,CAACA,MACpBA,IAAU,MAEXC,KAAKD,KARD,cACCwC,EADD,yBAUExC,IAAOwC,GAAMC,cAVf,4C,sBC7FP,IAAMG,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CAIJC,QAAS,OACTC,eAAgB,gBAChBC,QAASJ,EAAMK,QAAQ,IAEzBC,OAAQ,GAGRC,MAAO,CACLC,MAAO,aAiDIC,OA7CR,WACL,IAAMC,EAAUZ,KAChB,EAAuCf,IAAhCd,EAAP,EAAOA,KAAMS,EAAb,EAAaA,QAASW,EAAtB,EAAsBA,cACtB,EAAoCZ,mBAAS,MAA7C,mBAAOkC,EAAP,KAAmBC,EAAnB,KAEMC,EAAc,WAClBD,EAAc,OAGhB,OACE,sBAAKE,UAAWJ,EAAQT,KAAxB,UACE,cAACc,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAAyB,mBAAGC,KAAK,+CAA+CC,OAAO,SAASJ,UAAWJ,EAAQH,MAA1F,qBACxBtC,EAAKe,SACJ,eAAC,IAAMmC,SAAP,WACE,8BACE,cAACC,EAAA,EAAD,CAAQJ,QAAQ,WAAWK,QAAS,SAACC,GAAWV,EAAcU,EAAMC,gBAApE,SAAsFtD,EAAKC,SAE7F,eAACsD,EAAA,EAAD,CACEC,SAAUd,EACVe,aAAW,EACXC,OAAQhB,EACRiB,QAASf,EAJX,UAMe,OAAZnC,EACC,cAACmD,EAAA,EAAD,CAAUR,QAAO,sBAAE,sBAAApE,EAAA,6DACjB4D,IADiB,SAEXhB,IAFW,OAGjBR,IAHiB,2CAAnB,wCAKA,eAACwC,EAAA,EAAD,CAAUC,UAAQ,EAAlB,UAAoBpD,EAApB,WAEF,cAACmD,EAAA,EAAD,CAAUR,QAAS,WACjBR,IACA3D,OAFF,2BAMJ,8BACE,cAACkE,EAAA,EAAD,CAAQJ,QAAQ,WAAWK,QAASnE,IAApC,kC,uCCrDJ4C,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJ8B,OAAQ,QACR7B,QAAS,OACT8B,cAAe,SACf7B,eAAgB,gBAElB8B,OAAQ,CACNC,IAAK,kBACLC,OAAQ,KAEVC,QAAS,CACPC,SAAU,OACVC,SAAU,QAEZC,KAAM,CACJ/B,MAAO,eAsIIgC,OAlIR,YAA2B,IAAZC,EAAW,EAAXA,SACd/B,EAAUZ,KAEhB,EAAkCrB,mBAAS,MAA3C,mBAAOgB,EAAP,KAAkBiD,EAAlB,KACA,EAA8BjE,oBAAS,GAAvC,mBAAOkE,EAAP,KAAgBC,EAAhB,KACA,EAA0BnE,mBAAS,MAAnC,mBAAOoE,EAAP,KAAcC,EAAd,KACA,EAAsD/D,IAA/Cd,EAAP,EAAOA,KAAMS,EAAb,EAAaA,QAASW,EAAtB,EAAsBA,cAAeR,EAArC,EAAqCA,cACrC,EAA0DJ,mBAAS,MAAnE,mBAAOsE,EAAP,KAA8BC,EAA9B,KAEA7D,qBAAU,WAAM,4CACd,gCAAAlC,EAAA,sEACyBgG,MAAM,wDAD/B,cACQ7F,EADR,gBAEuBA,EAAS8F,OAFhC,OAEQC,EAFR,OAGQC,EAAOD,EAAOA,OAAOE,QAAO,SAAAC,GAAK,MAAoB,aAAhBA,EAAMC,UAAuB,GAExEP,EAAyBI,EAAKI,SAAWJ,EAAKK,sBALhD,4CADc,uBAAC,WAAD,wBASdC,KACC,IAEHvE,qBAAU,WAAM,4CACd,sBAAAlC,EAAA,6DACE2F,GAAW,GADb,KAEEF,EAFF,SAEqB1F,IAFrB,kCAGE4F,GAAW,GAHb,4CADc,sBAOI,OAAdnD,GAPW,WAAD,wBAQZwD,KAED,CAACxD,IAEJN,qBAAU,WACHlB,EAAKe,UACR8D,EAAS,QAEV,CAAC7E,IAEJ,IAAM0F,EAAYrE,sBAAW,sBAAC,8BAAArC,EAAA,6DAC5B2F,GAAW,GADiB,kBAIpBpD,EAAqBC,GAJD,cAK1BmE,OAAOC,SAAS,EAAG,GALO,SAMHlG,EAAU,CAACG,IAAK2B,EAAUpC,GAAIU,MAAOE,EAAKC,OANvC,OAMpBd,EANoB,OAOpB0G,EAAO1G,EAASE,OAAOC,KAAKH,GAAU,IAG5C0F,EAAS,CACPzF,GAAIoC,EAAUpC,GACdyG,KAAMA,IAIRjF,GAAc,SAACjB,GACb,OAAO,6BAAIA,GAAX,mBAAoB6B,EAAUpC,GAAKyG,OAGrCpB,EAAa,MACbrD,IArB0B,kDAuBhB,gCAAN,MACFoD,EAAS,EAAD,IAEVC,EAAa,MA1Ba,0DA4B3B,CAACzE,EAAMwB,IAEV,GAAIkD,EACF,OACE,sBAAK7B,UAAU,UAAUzD,GAAG,UAA5B,UACE,qBAAKyD,UAAU,mBACf,qBAAKA,UAAU,sBAKrB,IAAMiD,GAAmB9F,EAAKe,UAA0B,OAAdS,GAAkC,OAAZf,GAAoBA,EAAUe,EAAUhC,MACpGuG,EAAY,sBAAkBvE,EAAUpC,GAA5B,gBAAsCoC,EAAUhC,MAAhD,SA8BhB,OA5BKQ,EAAKe,SAEa,OAAZN,EACTsF,EAAe,sFACNtF,EAAUe,EAAUhC,MAC7BuG,EAAe,mEAEZjB,GACC,eAAC,IAAM5B,SAAP,WACE,oBAAGF,KAAK,IAAIH,UAAWJ,EAAQ6B,KAAMlB,QAAS,WAC5C,IAAI4C,KAAe,CACjBC,YAAa,QACbC,YAAatH,EACbuH,WAAYC,KAAKC,KAAKD,KAAKE,IAAI9E,EAAUhC,MAAQiB,EAASqE,GAAuBsB,KAAKG,IAAI,GAAI,IAC9FC,UAAW,YACXC,YAAazG,EAAKC,KAClByG,aAAc,QACbC,QARL,iBAUOP,KAAKE,IAAI9E,EAAUhC,MAAQiB,EAASqE,GAAuB8B,QAAQ,GAV1E,WADF,UAgBmB,OAAdpF,IACTuE,EAAe,uBAxBfA,EAAe,8EA4Bf,sBAAKlD,UAAWJ,EAAQT,KAAxB,UACG4C,GACC,gCACE,cAAC9B,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0B6B,EAAMxF,KAChC,cAAC0D,EAAA,EAAD,CAAYC,QAAQ,QAApB,SAA4B,cAAC,IAAD,CAAY8D,OAAQ,EAAGC,OAAO,EAA9B,SAAqClC,EAAMiB,YAG3E,8BACE,cAACkB,GAAA,EAAD,CAASC,aAAW,EAACvE,QAAS,CAACuB,OAAQvB,EAAQuB,OAAQG,QAAS1B,EAAQ0B,SAAU8C,MAAOlB,EAAcrC,KAAMoC,EAAiBoB,UAAU,SAASC,OAAK,EAAtJ,SACE,+BACE,eAAChE,EAAA,EAAD,CAAQJ,QAAQ,WAAWc,SAAUiC,EAAiB1C,QAASsC,EAA/D,yBACiBlE,EAAUpC,GAD3B,UACsCoC,EAAUhC,MADhD,sB,8BClJNqC,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJoF,aAAcrF,EAAMK,QAAQ,IAE9BiF,MAAO,CAELlF,QAASJ,EAAMK,QAAQ,GACvBkF,aAAcvF,EAAMK,QAAQ,IAC5B0B,OAAQ,OACR7B,QAAS,OACT8B,cAAe,UAEjBwD,kBAAmB,CACjBtF,QAAS,OACT8B,cAAe,SACfyD,SAAU,EACVtF,eAAgB,UAElBuF,SAAU,CACRC,OAAQ,YAqCGC,OAjCR,YAA4C,IAA1BhI,EAAyB,EAAzBA,OAAQiI,EAAiB,EAAjBA,QAASC,EAAQ,EAARA,MAClCpF,EAAUZ,KAEViG,EAAMD,GAAgBxI,OAAOC,KAAKK,GAExC,OACE,sBAAKkD,UAAWJ,EAAQT,KAAxB,UACE,cAACc,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0B6E,IAC1B,cAACG,GAAA,EAAD,CAAMC,WAAS,EAAC5F,QAAS,EAAzB,SACGzC,GAAUmI,EAAIG,KAAI,SAAC7I,GAAD,OACjB,cAAC2I,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAArC,SACE,eAACC,GAAA,EAAD,CAAOC,UAAW,EAAG3F,UAAWJ,EAAQ4E,MAAxC,UACE,cAACvE,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0B3D,IAExBO,EAAOP,GACP,cAAC0D,EAAA,EAAD,CAAYC,QAAQ,QAApB,SAA6BpD,EAAOP,KACpC,qBAAKyD,UAAWJ,EAAQ8E,kBAAxB,SACE,gCAEE,cAACkB,GAAA,EAAD,CAAU1F,QAAQ,OAAO2F,UAAU,OAAOC,MAAM,MAAM9F,UAAWJ,EAAQgF,WACzE,cAACgB,GAAA,EAAD,CAAU1F,QAAQ,OAAO2F,UAAU,OAAOC,MAAM,MAAM9F,UAAWJ,EAAQgF,WACzE,cAACgB,GAAA,EAAD,CAAU1F,QAAQ,OAAO2F,UAAU,OAAOC,MAAM,MAAM9F,UAAWJ,EAAQgF,oBAXtCrI,YCtBjD2C,GAAQ6G,YAAe,CAC3BC,WAAY,CACVC,WAAY,CACV,gBACA,UACA,aACAC,KAAK,KACPC,GAAI,CACFC,UAAW,SACXC,eAAgB,YAChB9E,SAAU,OACV+E,WAAY,QAEdC,GAAI,CACFhC,aAAc,OACd8B,eAAgB,aAElBG,MAAO,CACLJ,UAAW,SACXK,WAAY,MACZ9B,SAAU,EACVvF,QAAS,OACT8B,cAAe,SACf7B,eAAgB,WAGpBqH,MAAO,CACLjC,aAAc,MAIZzF,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJiH,UAAW,cAsEAO,OAjEf,WACE,IAAM/G,EAAUZ,KAChB,EAA0BrB,mBAAS,MAAnC,mBAAOiJ,EAAP,KAAcjF,EAAd,KACA,EAAwChE,oBAAS,GAAjD,mBAAOkJ,EAAP,KAAqBC,EAArB,KACA,EAAkCnJ,oBAAS,GAA3C,mBAAOoJ,EAAP,KAAkBC,EAAlB,KACOlJ,EAAcG,IAAdH,WACDmJ,EAAkBnL,EAClBoL,EAAc,CAAC,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,IAC9C,EAA4CvJ,mBAAS,IAArD,mBAAOwJ,EAAP,KAAuBC,EAAvB,KAEMC,EAAmB,kBAAMP,GAAgB,IAqB/C,OAnBAzI,qBAAU,WACM,OAAVuI,GACFE,GAAgB,KAEjB,CAACF,IAEJvI,qBAAU,WAAM,4CACd,kCAAAlC,EAAA,sDACQmL,EAAkB,GAD1B,cAEmBJ,GAFnB,IAEE,2BAAW3K,EAAmB,QAC5B+K,EAAgBC,KAAK,CAACvK,IAAKT,EAAIU,MAAOgK,IAH1C,0CAMEG,EANF,SAM0BvK,EAAUyK,GANpC,8EADc,uBAAC,WAAD,wBAUdE,KACC,IAGD,eAAC,IAAMnH,SAAP,WACE,cAACoH,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAexI,MAAOA,GAAtB,SACE,sBAAKc,UAAWJ,EAAQT,KAAxB,UACE,cAAC,GAAD,IACA,eAACwI,EAAA,EAAD,WACE,cAAC1H,EAAA,EAAD,CAAYC,QAAQ,KAApB,SACE,cAAC,IAAD,CACE8D,OAAQ,EACR4D,YAAa,kBAAMZ,GAAa,IAFlC,qBAODD,GACC,eAAC,IAAM1G,SAAP,WACE,cAAC,GAAD,CAAMsB,SAAUA,IAChB,cAAC,GAAD,CAAQ7E,OAAQqK,EAAgBnC,MAAOkC,EAAanC,QAAQ,aAC5D,cAAC,GAAD,CAAQjI,OAAQgB,EAAYiH,QAAQ,gBAGxC,cAAC8C,EAAA,EAAD,CAAUhH,KAAMgG,EAAciB,iBAAkB,IAAOhH,QAASuG,EAAhE,SACE,cAACU,EAAA,EAAD,CAAOjH,QAASuG,EAAkBW,SAAS,QAA3C,SACGpB,kBCrGFqB,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB9L,MAAK,YAAkD,IAA/C+L,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAClL,EAAD,UACE,cAAC,GAAD,QAGJmL,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.9ec2c904.chunk.js","sourcesContent":["import {config} from \"@onflow/fcl\"\n\nconsole.log(process.env);\n\nconfig()\n  .put(\"accessNode.api\", process.env.REACT_APP_ACCESS_NODE) // Configure FCL's Access Node\n  .put(\"challenge.handshake\", process.env.REACT_APP_WALLET_DISCOVERY) // Configure FCL's Wallet Discovery mechanism\n  //.put(\"0xProfile\", process.env.REACT_APP_CONTRACT_PROFILE) // Will let us use `0xProfile` in our Cadence\n\nexport let FEATURED_ADDRESS = \"\";\nexport let LOGO_URL = \"\";\n  \n  \nif (process.env.REACT_APP_FLOW_NETWORK === \"emulator\") {\n  const contract_address = \"0xf8d6e0586b0a20c7\";\n  config()\n    .put(\"0xFUNGIBLETOKENADDRESS\", \"0xee82856bf20e2aa6\")\n    .put(\"0xTOKENADDRESS\", \"0x0ae53cb6e3f42a79\")\n    .put(\"0xNONFUNGIBLETOKENADDRESS\", contract_address)\n    .put(\"0xHAIKUNFTADDRESS\", contract_address)\n    .put(\"0xFUSDADDRESS\", contract_address);\n\n  FEATURED_ADDRESS = contract_address;\n  LOGO_URL = \"http://localhost:3000/logo512.png\"\n} else if (process.env.REACT_APP_FLOW_NETWORK === \"testnet\") {\n  const contract_address = \"0x15fa543552f2c1f0\";\n  config()\n    .put(\"0xFUNGIBLETOKENADDRESS\", \"0x9a0766d93b6608b7\")\n    .put(\"0xTOKENADDRESS\", \"0x7e60df042a9c0868\")\n    .put(\"0xNONFUNGIBLETOKENADDRESS\", \"0x631e88ae7f1d7c20\")\n    .put(\"0xHAIKUNFTADDRESS\", contract_address)\n    .put(\"0xFUSDADDRESS\", \"0xe223d8a629e49c68\");\n\n  FEATURED_ADDRESS = contract_address;\n  LOGO_URL = \"https://testnet.bitku.art/logo512.png\"\n}\n","import * as fcl from \"@onflow/fcl\";\nimport * as t from \"@onflow/types\";\n\nexport const GET_NEXT_ID_AND_PRICE = `\nimport HaikuNFT from 0xHAIKUNFTADDRESS\n\npub fun main(): {UInt64: UFix64} {\n\n    return {HaikuNFT.totalSupply: HaikuNFT.currentPrice()}\n}\n`;\n\nexport async function getNextIDAndPrice() {\n  const response = await fcl\n  .send([\n    fcl.script(GET_NEXT_ID_AND_PRICE)\n  ])\n  .then(fcl.decode);\n\n  const id = Object.keys(response)[0];\n  return {\n    id: parseInt(id),\n    price: response[id]\n  };\n}\n\nexport const GET_HAIKU = `\nimport HaikuNFT from 0xHAIKUNFTADDRESS\nimport NonFungibleToken from 0xNONFUNGIBLETOKENADDRESS\n\npub fun main(id: UInt64, address: Address): String {\n  let account = getAccount(address)\n  let capability = account.getCapability(HaikuNFT.HaikuCollectionPublicPath)\n  let ref = capability.borrow<&{HaikuNFT.HaikuCollectionPublic, NonFungibleToken.CollectionPublic}>() ?? panic(\"Could not borrow\")\n\n  return ref.borrowHaiku(id: id).text\n}\n`;\n\nexport const GET_HAIKUS = `\nimport HaikuNFT from 0xHAIKUNFTADDRESS\nimport NonFungibleToken from 0xNONFUNGIBLETOKENADDRESS\n\npub fun main(haikus: { UInt64: Address }): { UInt64: String } {\n  let response: {UInt64: String} = {}\n  for id in haikus.keys {\n    let address = haikus[id]!\n    let account = getAccount(address)\n    let capability = account.getCapability(HaikuNFT.HaikuCollectionPublicPath)\n    let ref = capability.borrow<&{HaikuNFT.HaikuCollectionPublic, NonFungibleToken.CollectionPublic}>() ?? panic(\"Could not borrow\")\n    response[id] = ref.borrowHaiku(id: id).text\n  }\n\n  return response\n}\n`;\n\nexport async function getHaikus(haikus) {\n  return await fcl\n    .send([\n      fcl.script(GET_HAIKUS),\n      fcl.args([\n        fcl.arg(haikus, t.Dictionary({key: t.UInt64, value: t.Address}))\n        //fcl.arg(address, t.Address),\n        //fcl.arg(id, t.UInt64),\n      ]),\n    ])\n    .then(fcl.decode);\n}\n\nexport async function getBalance(user) {\n  return await fcl\n  .send([\n    fcl.script`\n      import FungibleToken from 0xFUNGIBLETOKENADDRESS\n      import FUSD from 0xFUSDADDRESS\n      \n      pub fun main(account: Address): UFix64 {\n      \n          let vaultRef = getAccount(account)\n              .getCapability(/public/fusdBalance)\n              .borrow<&FUSD.Vault{FungibleToken.Balance}>()\n              ?? panic(\"Could not borrow Balance reference to the Vault\")\n      \n          return vaultRef.balance\n      }\n    `,\n    fcl.args([\n      fcl.arg(user.addr, t.Address), // <-- t.Address this time :)\n    ]),\n  ])\n  .then(fcl.decode);\n}\n\nexport async function getUserHaikus(user) {\n  return await fcl\n  .send([\n    fcl.script`\n      import HaikuNFT from 0xHAIKUNFTADDRESS\n      import NonFungibleToken from 0xNONFUNGIBLETOKENADDRESS\n      \n      pub fun main(address: Address): {UInt64: String} {\n        let account = getAccount(address)\n        let capability = account.getCapability(HaikuNFT.HaikuCollectionPublicPath)\n        let ref = capability.borrow<&{HaikuNFT.HaikuCollectionPublic, NonFungibleToken.CollectionPublic}>() ?? panic(\"Could not borrow\")\n      \n        let haikus: {UInt64: String} = {}\n      \n        for id in ref.getIDs() {\n          let nft = ref.borrowNFT(id: id)\n          haikus[id] = ref.borrowHaiku(id: id).text\n        }\n      \n        return haikus\n      }\n    `,\n    fcl.args([\n      fcl.arg(user.addr, t.Address), // <-- t.Address this time :)\n    ]),\n  ])\n  .then(fcl.decode);\n}","import React, {useCallback, useEffect, useState, useContext} from \"react\";\nimport * as fcl from \"@onflow/fcl\";\nimport {getBalance, getUserHaikus} from \"../cadence/scripts\";\n\nconst UserStateContext = React.createContext();\n\nexport function UserStateProvider({children}) {\n  const [balance, setBalance] = useState(0);\n  const [userHaikus, setUserHaikus] = useState({});\n\n  return <UserStateContext.Provider value={{balance, setBalance, userHaikus, setUserHaikus}} children={children} />\n}\n\nexport function useCurrentUser() {\n  const [user, setUser] = useState({loggedIn: null});\n  const {balance, setBalance, userHaikus, setUserHaikus} = useContext(UserStateContext);\n\n  useEffect(() => fcl.currentUser().subscribe(setUser), []);\n\n  const updateBalance = useCallback(async () => {\n    try {\n      const balance = await getBalance(user);\n      setBalance(balance);\n    } catch {\n      setBalance(null);\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (user.loggedIn)  {\n      updateBalance();\n    } else {\n      setBalance(0);\n    }\n  }, [user]);\n\n  useEffect(() => {\n    async function getHaikus() {\n      try {\n        const haikus = await getUserHaikus(user);\n        setUserHaikus(haikus);\n      } catch {}\n    }\n\n    if (user.loggedIn) {\n      getHaikus();\n    } else {\n      setUserHaikus({});\n    }\n  }, [user]);\n  \n  return {user, balance, updateBalance, userHaikus, setUserHaikus};\n}\n\nexport default useCurrentUser;","import * as fcl from \"@onflow/fcl\"\nimport * as t from \"@onflow/types\";\n\nexport const MINT_HAIKU_TRANSACTION = `\nimport FungibleToken from 0xFUNGIBLETOKENADDRESS\nimport FlowToken from 0xTOKENADDRESS\nimport FUSD from 0xFUSDADDRESS\nimport NonFungibleToken from 0xNONFUNGIBLETOKENADDRESS\n\nimport HaikuNFT from 0xHAIKUNFTADDRESS\n\ntransaction (haikuID: UInt64, price: UFix64) {\n    let collection: &NonFungibleToken.Collection\n    let sentVault: @FungibleToken.Vault\n    let receiverRef: &FlowToken.Vault{FungibleToken.Receiver}\n    \n    prepare(signer: AuthAccount) {\n        // if the account doesn't already have a collection\n        if signer.borrow<&HaikuNFT.Collection>(from: HaikuNFT.HaikuCollectionStoragePath) == nil {\n\n\n            // create a new empty collection\n            let collection <- HaikuNFT.createEmptyCollection()\n            \n            // save it to the account\n            signer.save(<-collection, to: HaikuNFT.HaikuCollectionStoragePath)\n\n            // create a public capability for the collection\n            signer.link<&{NonFungibleToken.CollectionPublic, HaikuNFT.HaikuCollectionPublic}>(HaikuNFT.HaikuCollectionPublicPath, target: HaikuNFT.HaikuCollectionStoragePath)\n        }\n\n        self.collection = signer.borrow<&NonFungibleToken.Collection>(from: HaikuNFT.HaikuCollectionStoragePath) \n             ?? panic(\"Could not borrow reference to NFT Collection!\")\n\n        // Get a reference to the signer's stored vault\n        let vaultRef = signer.borrow<&FUSD.Vault>(from: /storage/fusdVault)\n          ?? panic(\"Could not borrow reference to the owner's FUSD Vault!\")\n\n        // Get a reference to the signer's FLOW receiver to receive FLOW necessary to ensure they have\n        // enough storage\n        self.receiverRef =  signer\n          .getCapability(/public/flowTokenReceiver)\n          .borrow<&FlowToken.Vault{FungibleToken.Receiver}>()\n        ?? panic(\"Could not borrow receiver reference to the recipient's Vault\")\n\n        // Withdraw tokens from the signer's stored vault\n        self.sentVault <- vaultRef.withdraw(amount: price)\n    }\n\n    execute {\n        HaikuNFT.mintHaiku(recipient: self.collection, vault: <- self.sentVault, id: haikuID, flowReceiverRef: self.receiverRef)\n    }\n}\n`;\n\nexport async function mintHaikuTransaction(nextHaiku) {\n  const txId = await fcl.send([\n    fcl.transaction(MINT_HAIKU_TRANSACTION),\n    fcl.args([\n      fcl.arg(nextHaiku.id, t.UInt64),\n      fcl.arg(nextHaiku.price, t.UFix64),\n    ]),\n    fcl.payer(fcl.authz), // current user is responsible for paying for the transaction\n    fcl.proposer(fcl.authz), // current user acting as the nonce\n    fcl.authorizations([fcl.authz]), // current user will be first AuthAccount\n    fcl.limit(9999), // set the compute limit\n  ])\n  .then(fcl.decode);\n\n  return fcl.tx(txId).onceSealed();\n}\n\n// Copied from https://docs.onflow.org/fusd/transactions/\nexport const SETUP_FUSD_VAULT = `\nimport FungibleToken from 0xFUNGIBLETOKENADDRESS\nimport FUSD from 0xFUSDADDRESS\n\ntransaction {\n\n  prepare(signer: AuthAccount) {\n\n    // It's OK if the account already has a Vault, but we don't want to replace it\n    if(signer.borrow<&FUSD.Vault>(from: /storage/fusdVault) != nil) {\n      return\n    }\n    \n    // Create a new FUSD Vault and put it in storage\n    signer.save(<-FUSD.createEmptyVault(), to: /storage/fusdVault)\n\n    // Create a public capability to the Vault that only exposes\n    // the deposit function through the Receiver interface\n    signer.link<&FUSD.Vault{FungibleToken.Receiver}>(\n      /public/fusdReceiver,\n      target: /storage/fusdVault\n    )\n\n    // Create a public capability to the Vault that only exposes\n    // the balance field through the Balance interface\n    signer.link<&FUSD.Vault{FungibleToken.Balance}>(\n      /public/fusdBalance,\n      target: /storage/fusdVault\n    )\n  }\n}\n`;\n\nexport async function setupFUSDVaultTransaction() {\n  const txId = await fcl.send([\n    fcl.transaction(SETUP_FUSD_VAULT),\n    fcl.payer(fcl.authz), // current user is responsible for paying for the transaction\n    fcl.proposer(fcl.authz), // current user acting as the nonce\n    fcl.authorizations([fcl.authz]), // current user will be first AuthAccount\n    fcl.limit(99), // set the compute limit\n  ])\n  .then(fcl.decode);\n\n  return fcl.tx(txId).onceSealed();\n}\n","// File: ./src/auth-cluster.js\n\nimport React, {useState} from \"react\"\nimport * as fcl from \"@onflow/fcl\"\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Typography from '@material-ui/core/Typography';\n\nimport useCurrentUser from \"../hooks/useCurrentUser\";\nimport { setupFUSDVaultTransaction } from \"../cadence/transactions\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    // position: \"absolute\",\n    // top: theme.spacing(1),\n    // right: theme.spacing(1)\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    padding: theme.spacing(1)\n  },\n  button: {\n    \n  },\n  about: {\n    color: \"black\"\n  }\n}))\n\nexport function AuthCluster() {\n  const classes = useStyles();\n  const {user, balance, updateBalance} = useCurrentUser();\n  const [menuAnchor, setMenuAnchor] = useState(null);\n\n  const handleClose = () => {\n    setMenuAnchor(null);\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h5\"><a href=\"https://github.com/docmarionum1/bitku#readme\" target=\"_blank\" className={classes.about}>About</a></Typography>\n      {user.loggedIn ?\n        <React.Fragment>\n          <div>\n            <Button variant=\"outlined\" onClick={(event) => {setMenuAnchor(event.currentTarget)}}>{user.addr}</Button>\n          </div> \n          <Menu\n            anchorEl={menuAnchor}\n            keepMounted\n            open={!!menuAnchor}\n            onClose={handleClose}\n          >\n            {balance === null ?\n              <MenuItem onClick={async () => {\n                handleClose();\n                await setupFUSDVaultTransaction();\n                updateBalance();\n              }}>Enable FUSD on this wallet</MenuItem> :\n              <MenuItem disabled>{balance} FUSD</MenuItem>\n            }\n            <MenuItem onClick={() => {\n              handleClose();\n              fcl.unauthenticate();\n            }}>Log Out</MenuItem>\n          </Menu>\n        </React.Fragment> :\n        <div>\n          <Button variant=\"outlined\" onClick={fcl.logIn}>Connect Wallet</Button>\n        </div>\n        }\n    </div>\n  );\n}\n\nexport default AuthCluster;","import React, {useState, useEffect, useCallback} from \"react\"\n\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TypeWriter from 'react-typewriter';\n\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\n\nimport { LOGO_URL } from \"../config\";\nimport {getHaikus, getNextIDAndPrice} from \"../cadence/scripts\";\nimport {mintHaikuTransaction} from \"../cadence/transactions\";\nimport useCurrentUser from \"../hooks/useCurrentUser\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: \"20rem\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-evenly\"\n  },\n  popper: {\n    top: '10px !important',\n    zIndex: 100\n  },\n  tooltip: {\n    fontSize: '1rem',\n    maxWidth: 'none',\n  },\n  link: {\n    color: 'inherit'\n  }\n}));\n\nexport function Mint({setError}) {\n  const classes = useStyles();\n\n  const [nextHaiku, setNextHaiku] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [haiku, setHaiku] = useState(null);\n  const {user, balance, updateBalance, setUserHaikus} = useCurrentUser();\n  const [rampMinPurchaseAmount, setRampMinPurchaseAmount] = useState(null);\n\n  useEffect(() => {\n    async function fetchFUSDInfo() {\n      const response = await fetch(\"https://api-instant.ramp.network/api/host-api/assets\");\n      const assets = await response.json();\n      const fusd = assets.assets.filter(asset => asset.symbol == \"FLOW_FUSD\")[0];\n\n      setRampMinPurchaseAmount(fusd.priceEur * fusd.minPurchaseAmountEur);\n    }\n\n    fetchFUSDInfo();\n  }, []);\n\n  useEffect(() => {\n    async function fetch() {\n      setLoading(true);\n      setNextHaiku(await getNextIDAndPrice());\n      setLoading(false);\n    }\n\n    if (nextHaiku === null) {\n      fetch();\n    }\n  }, [nextHaiku]);\n\n  useEffect(() => {\n    if (!user.loggedIn) {\n      setHaiku(null);\n    }\n  }, [user]);\n\n  const mintHaiku = useCallback(async () => {\n    setLoading(true);\n    try {\n      // Mint the new haiku and get the text\n      await mintHaikuTransaction(nextHaiku);\n      window.scrollTo(0, 0);\n      const response = await getHaikus({key: nextHaiku.id, value: user.addr});\n      const text = response[Object.keys(response)[0]];\n\n      // Update the newly minted haiku component\n      setHaiku({\n        id: nextHaiku.id,\n        text: text,\n      });\n\n      // Add it to the user's list of haiku\n      setUserHaikus((haikus) => {\n        return {...haikus, [nextHaiku.id]: text};\n      });\n\n      setNextHaiku(null);\n      updateBalance();\n    } catch (e) {\n      if (e !== \"Declined: Externally Halted\") {\n        setError(e);\n      }\n      setNextHaiku(null);\n    }\n  }, [user, nextHaiku]);\n\n  if (loading) {\n    return (\n      <div className=\"spinner\" id=\"spinner\">\n        <div className=\"double-bounce1\"></div>\n        <div className=\"double-bounce2\"></div>\n      </div>\n    );\n  }\n\n  const mintingDisabled = !user.loggedIn || nextHaiku === null || balance === null || balance < nextHaiku.price;\n  let tooltipTitle = `Mint Bitku #${nextHaiku.id} for ${nextHaiku.price} FUSD`;\n\n  if (!user.loggedIn) {\n    tooltipTitle = \"To mint a Bitku, please connect your wallet using the menu in the top right\";\n  } else if (balance === null) {\n    tooltipTitle = \"To mint a Bitku, please enable FUSD for your wallet using the menu in the top right\";\n  } else if (balance < nextHaiku.price) {\n    tooltipTitle = <span>\n      You don't have enough FUSD.&nbsp; \n      {rampMinPurchaseAmount &&\n        <React.Fragment>\n          <a href=\"#\" className={classes.link} onClick={() => {\n            new RampInstantSDK({\n              hostAppName: 'Bitku',\n              hostLogoUrl: LOGO_URL,\n              swapAmount: Math.ceil(Math.max(nextHaiku.price - balance, rampMinPurchaseAmount)*Math.pow(10, 8)),\n              swapAsset: \"FLOW_FUSD\",\n              userAddress: user.addr,\n              fiatCurrency: \"EUR\"\n            }).show();\n          }}>\n            Buy {Math.max(nextHaiku.price - balance, rampMinPurchaseAmount).toFixed(2)} FUSD\n          </a>.\n        </React.Fragment>\n      }\n    </span>;\n  } else if (nextHaiku === null) {\n    tooltipTitle = \"No Bitkus remaining\";\n  }\n\n  return (\n    <div className={classes.root}>\n      {haiku &&\n        <div>\n          <Typography variant=\"h6\">{haiku.id}</Typography>\n          <Typography variant=\"body2\"><TypeWriter typing={1} fixed={true}>{haiku.text}</TypeWriter></Typography>\n        </div>\n      }\n      <div>\n        <Tooltip interactive classes={{popper: classes.popper, tooltip: classes.tooltip}} title={tooltipTitle} open={mintingDisabled} placement=\"bottom\" arrow>\n          <span>\n            <Button variant=\"outlined\" disabled={mintingDisabled} onClick={mintHaiku}>\n                Mint Bitku #{nextHaiku.id}/1024 ({nextHaiku.price} FUSD)\n            </Button>\n          </span>\n        </Tooltip>\n      </div>\n    </div>\n  );\n}\n\nexport default Mint;","import React, {useState, useEffect} from \"react\"\n\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper } from \"@material-ui/core\";\nimport Grid from '@material-ui/core/Grid';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginBottom: theme.spacing(4)\n  },\n  paper: {\n    //width: \"fit-content\",\n    padding: theme.spacing(2),\n    borderRadius: theme.spacing(.5),\n    height: '12em',\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  skeletonContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 1,\n    justifyContent: \"center\"\n  },\n  skeleton: {\n    margin: \"auto\"\n  }\n}));\n\nexport function Haikus ({haikus, heading, order}) {\n  const classes = useStyles();\n\n  const ids = order ? order : Object.keys(haikus);\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h4\">{heading}</Typography>\n      <Grid container spacing={3}>\n        {haikus && ids.map((id) => (\n          <Grid item xs={12} sm={6} md={6} lg={4} key={id}>\n            <Paper elevation={3} className={classes.paper}>\n              <Typography variant=\"h6\">{id}</Typography>\n              {\n                haikus[id] ? \n                <Typography variant=\"body2\">{haikus[id]}</Typography> :\n                <div className={classes.skeletonContainer}>\n                  <div>\n\n                    <Skeleton variant=\"text\" animation=\"wave\" width=\"40%\" className={classes.skeleton}/>\n                    <Skeleton variant=\"text\" animation=\"wave\" width=\"56%\" className={classes.skeleton}/>\n                    <Skeleton variant=\"text\" animation=\"wave\" width=\"40%\" className={classes.skeleton}/>\n                  </div>\n                </div>\n              }\n            </Paper>\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n}\n\nexport default Haikus;","import React, {useState, useEffect} from \"react\";\nimport './App.css';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme, ThemeProvider, makeStyles } from '@material-ui/core/styles';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\nimport { Typography } from \"@material-ui/core\";\nimport Container from '@material-ui/core/Container';\nimport TypeWriter from 'react-typewriter';\n\n\n\nimport {useCurrentUser} from \"./hooks/useCurrentUser\";\nimport AuthCluster from \"./components/AuthCluster\";\nimport Mint from './components/Mint';\nimport Haikus from './components/Haikus';\nimport {getHaikus} from './cadence/scripts';\nimport { FEATURED_ADDRESS } from \"./config\";\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: [\n      '\"Courier New\"',\n      'courier',\n      'monospace'\n    ].join(','),\n    h6: {\n      textAlign: \"center\",\n      textDecoration: \"underline\",\n      fontSize: \"1rem\",\n      fontWeight: \"bold\"\n    },\n    h4: {\n      marginBottom: \"1rem\",\n      textDecoration: \"underline\"\n    },\n    body2: {\n      textAlign: \"center\",\n      whiteSpace: \"pre\",\n      flexGrow: 1,\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n    }\n  },\n  shape: {\n    borderRadius: 32\n  }\n});\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    textAlign: \"center\"\n  },\n}));\n\n\nfunction App() {\n  const classes = useStyles();\n  const [error, setError] = useState(null);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [typingEnd, setTypingEnd] = useState(false);\n  const {userHaikus} = useCurrentUser();\n  const featuredAddress = FEATURED_ADDRESS;\n  const featuredIds = [40, 29, 0, 4, 5, 28, 41, 62];\n  const [featuredHaikus, setFeaturedHaikus] = useState({});\n\n  const handleErrorClose = () => setSnackbarOpen(false);\n\n  useEffect(() => {\n    if (error !== null) {\n      setSnackbarOpen(true);\n    }\n  }, [error]);\n\n  useEffect(() => {\n    async function getText() {\n      const requestedHaikus = [];\n      for (const id of featuredIds) {\n        requestedHaikus.push({key: id, value: featuredAddress});\n      }\n\n      setFeaturedHaikus(await getHaikus(requestedHaikus));\n    }\n\n    getText();\n  }, []);\n\n  return (\n    <React.Fragment>\n      <CssBaseline/>\n      <ThemeProvider theme={theme}>\n        <div className={classes.root}>\n          <AuthCluster/>\n          <Container>\n            <Typography variant=\"h1\">\n              <TypeWriter \n                typing={1}\n                onTypingEnd={() => setTypingEnd(true)}\n              >\n                Bitku\n              </TypeWriter>\n            </Typography>\n            {typingEnd &&\n              <React.Fragment>\n                <Mint setError={setError}/>\n                <Haikus haikus={featuredHaikus} order={featuredIds} heading=\"Featured\"/>\n                <Haikus haikus={userHaikus} heading=\"My Bitku\"/>\n              </React.Fragment>\n            }\n            <Snackbar open={snackbarOpen} autoHideDuration={10000} onClose={handleErrorClose}>\n              <Alert onClose={handleErrorClose} severity=\"error\">\n                {error}\n              </Alert>\n            </Snackbar>\n          </Container>\n        </div>\n      </ThemeProvider>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./config\"\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {UserStateProvider} from \"./hooks/useCurrentUser\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <UserStateProvider>\n      <App />\n    </UserStateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}