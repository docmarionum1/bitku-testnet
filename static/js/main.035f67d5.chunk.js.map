{"version":3,"sources":["config.js","cadence/scripts.js","hooks/useCurrentUser.js","hooks/useReactPath.js","cadence/transactions.js","components/AuthCluster.js","components/Mint.js","components/Haikus.js","App.js","reportWebVitals.js","index.js"],"names":["config","put","process","FEATURED_ADDRESS","LOGO_URL","FLOWSCAN_URL","contract_address","GET_NEXT_ID_AND_PRICE","getNextIDAndPrice","a","fcl","then","response","id","Object","keys","parseInt","price","parseFloat","GET_HAIKUS","getHaikus","haikus","t","key","value","haikuText","pair","text","address","getBalance","user","addr","balance","getUserHaikus","UserStateContext","React","createContext","UserStateProvider","children","useState","setBalance","userHaikus","setUserHaikus","Provider","useCurrentUser","loggedIn","setUser","useContext","useEffect","subscribe","updateBalance","useCallback","useReactPath","window","location","hash","path","setPath","listenToPopstate","winPath","addEventListener","removeEventListener","showTransactionLink","txId","setError","flowScanLink","href","target","severity","MINT_HAIKU_TRANSACTION","mintHaikuTransaction","nextHaiku","toFixed","onceSealed","SETUP_FUSD_VAULT","setupFUSDVaultTransaction","SETUP_COLLECTION_TRANSACTION","setupBitkuCollectionTransaction","SEND_BITKU_TRANSACTION","sendBitkuTransaction","haikuID","targetAddress","useStyles","makeStyles","theme","root","display","justifyContent","padding","spacing","button","about","color","AuthCluster","classes","menuAnchor","setMenuAnchor","handleClose","className","Typography","variant","Fragment","Button","onClick","event","currentTarget","Menu","anchorEl","keepMounted","open","onClose","MenuItem","disabled","height","flexDirection","popper","top","zIndex","tooltip","fontSize","maxWidth","link","Mint","setNextHaiku","loading","setLoading","haiku","setHaiku","rampMinPurchaseAmount","setRampMinPurchaseAmount","fetch","json","assets","fusd","filter","asset","symbol","priceEur","minPurchaseAmountEur","fetchFUSDInfo","mintHaiku","scrollTo","message","mintingDisabled","tooltipTitle","RampInstantSDK","hostAppName","hostLogoUrl","swapAmount","Math","ceil","max","pow","swapAsset","userAddress","fiatCurrency","show","typing","fixed","Tooltip","interactive","title","placement","arrow","marginBottom","paper","borderRadius","menuContainer","iconButton","backgroundColor","sendDialog","alignItems","Haikus","heading","order","ids","el","handleCloseMenu","setSendDialog","handleCloseDialog","setSendAddress","sendAddress","sendDisabled","match","Grid","container","map","item","xs","sm","md","lg","Paper","elevation","IconButton","navigator","clipboard","writeText","host","Dialog","DialogTitle","DialogContent","style","fontStyle","TextField","label","onChange","DialogActions","autoFocus","newHaikus","createMuiTheme","typography","fontFamily","join","h6","textAlign","textDecoration","fontWeight","h4","body2","whiteSpace","flexGrow","shape","alert","cursor","App","error","snackbarOpen","setSnackbarOpen","typingEnd","setTypingEnd","featuredHaikuAddresses","featuredHaikus","setFeaturedHaikus","linkedHaiku","setLinkedHaiku","linkedHaikuHeader","setLinkedHaikuHeader","handleErrorClose","requestedHaikus","push","getText","urlParts","replace","split","console","log","length","CssBaseline","ThemeProvider","Container","history","pushState","popStateEvent","PopStateEvent","dispatchEvent","onTypingEnd","Snackbar","autoHideDuration","Alert","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.035f67d5.chunk.js","sourcesContent":["import { config } from \"@onflow/fcl\";\n\nconfig()\n  .put(\"accessNode.api\", process.env.REACT_APP_ACCESS_NODE) // Configure FCL's Access Node\n  .put(\"challenge.handshake\", process.env.REACT_APP_WALLET_DISCOVERY) // Configure FCL's Wallet Discovery mechanism\n//.put(\"0xProfile\", process.env.REACT_APP_CONTRACT_PROFILE) // Will let us use `0xProfile` in our Cadence\n\nexport let FEATURED_ADDRESS = \"\";\nexport let LOGO_URL = \"\";\nexport let FLOWSCAN_URL = \"\";\n\n\nif (process.env.REACT_APP_FLOW_NETWORK === \"emulator\") {\n  const contract_address = \"0xf8d6e0586b0a20c7\";\n  config()\n    .put(\"0xFUNGIBLETOKENADDRESS\", \"0xee82856bf20e2aa6\")\n    .put(\"0xTOKENADDRESS\", \"0x0ae53cb6e3f42a79\")\n    .put(\"0xNONFUNGIBLETOKENADDRESS\", contract_address)\n    .put(\"0xHAIKUNFTADDRESS\", contract_address)\n    .put(\"0xFUSDADDRESS\", contract_address);\n\n  FEATURED_ADDRESS = contract_address;\n  LOGO_URL = \"http://localhost:3000/logo512.png\";\n  FLOWSCAN_URL = \"\";\n} else if (process.env.REACT_APP_FLOW_NETWORK === \"testnet\") {\n  const contract_address = \"0x824f612f78d34250\";\n  config()\n    .put(\"0xFUNGIBLETOKENADDRESS\", \"0x9a0766d93b6608b7\")\n    .put(\"0xTOKENADDRESS\", \"0x7e60df042a9c0868\")\n    .put(\"0xNONFUNGIBLETOKENADDRESS\", \"0x631e88ae7f1d7c20\")\n    .put(\"0xHAIKUNFTADDRESS\", contract_address)\n    .put(\"0xFUSDADDRESS\", \"0xe223d8a629e49c68\");\n\n  FEATURED_ADDRESS = contract_address;\n  LOGO_URL = \"https://testnet.bitku.art/logo512.png\";\n  FLOWSCAN_URL = \"https://testnet.flowscan.org/transaction/\";\n} else if (process.env.REACT_APP_FLOW_NETWORK === \"mainnet\") {\n  const contract_address = \"0xf61e40c19db2a9e2\";\n  config()\n    .put(\"0xFUNGIBLETOKENADDRESS\", \"0xf233dcee88fe0abe\")\n    .put(\"0xTOKENADDRESS\", \"0x1654653399040a61\")\n    .put(\"0xNONFUNGIBLETOKENADDRESS\", \"0x1d7e57aa55817448\")\n    .put(\"0xHAIKUNFTADDRESS\", contract_address)\n    .put(\"0xFUSDADDRESS\", \"0x3c5959b568896393\");\n\n  FEATURED_ADDRESS = contract_address;\n  LOGO_URL = \"https://bitku.art/logo512.png\";\n  FLOWSCAN_URL = \"https://flowscan.org/transaction/\";\n}\n","import * as fcl from \"@onflow/fcl\";\nimport * as t from \"@onflow/types\";\n\nexport const GET_NEXT_ID_AND_PRICE = `\nimport HaikuNFT from 0xHAIKUNFTADDRESS\n\npub fun main(): {UInt64: UFix64} {\n\n    return {HaikuNFT.totalSupply: HaikuNFT.currentPrice()}\n}\n`;\n\nexport async function getNextIDAndPrice() {\n  const response = await fcl\n    .send([\n      fcl.script(GET_NEXT_ID_AND_PRICE)\n    ])\n    .then(fcl.decode);\n\n  const id = Object.keys(response)[0];\n  return {\n    id: parseInt(id),\n    price: parseFloat(response[id])\n  };\n}\n\nexport const GET_HAIKU = `\nimport HaikuNFT from 0xHAIKUNFTADDRESS\nimport NonFungibleToken from 0xNONFUNGIBLETOKENADDRESS\n\npub fun main(id: UInt64, address: Address): String {\n  let account = getAccount(address)\n  let capability = account.getCapability(HaikuNFT.HaikuCollectionPublicPath)\n  let ref = capability.borrow<&{HaikuNFT.HaikuCollectionPublic, NonFungibleToken.CollectionPublic}>() ?? panic(\"Could not borrow\")\n\n  return ref.borrowHaiku(id: id).text\n}\n`;\n\n// TODO: this needs to better handle a case where the bitku doesn't exist at that address anymore.\n// This wil require a change to the HaikuNFT contract (HaikuNFT.Collection.borrowNFT) to make it return\n// nil instead of panic\nexport const GET_HAIKUS = `\nimport HaikuNFT from 0xHAIKUNFTADDRESS\nimport NonFungibleToken from 0xNONFUNGIBLETOKENADDRESS\n\npub fun main(haikus: { UInt64: Address }): { UInt64: String } {\n  let response: {UInt64: String} = {}\n  for id in haikus.keys {\n    let address = haikus[id]!\n    let account = getAccount(address)\n    let capability = account.getCapability(HaikuNFT.HaikuCollectionPublicPath)\n    let ref = capability.borrow<&{HaikuNFT.HaikuCollectionPublic, NonFungibleToken.CollectionPublic}>()\n    if ref == nil {\n      continue\n    }\n    let haiku = ref!.borrowHaiku(id: id)\n    if haiku == nil {\n      continue\n    }\n    response[id] = haiku!.text\n  }\n\n  return response\n}\n`;\n\nexport async function getHaikus(haikus) {\n  const haikuText = await fcl\n    .send([\n      fcl.script(GET_HAIKUS),\n      fcl.args([\n        fcl.arg(haikus, t.Dictionary({ key: t.UInt64, value: t.Address }))\n        //fcl.arg(address, t.Address),\n        //fcl.arg(id, t.UInt64),\n      ]),\n    ])\n    .then(fcl.decode);\n  for (const pair of haikus) {\n    if (pair.key in haikuText) {\n      haikuText[pair.key] = { text: haikuText[pair.key], address: pair.value };\n    }\n  }\n  return haikuText;\n}\n\nexport async function getBalance(user) {\n  const balance = await fcl\n    .send([\n      fcl.script`\n      import FungibleToken from 0xFUNGIBLETOKENADDRESS\n      import FUSD from 0xFUSDADDRESS\n      \n      pub fun main(account: Address): UFix64 {\n      \n          let vaultRef = getAccount(account)\n              .getCapability(/public/fusdBalance)\n              .borrow<&FUSD.Vault{FungibleToken.Balance}>()\n              ?? panic(\"Could not borrow Balance reference to the Vault\")\n      \n          return vaultRef.balance\n      }\n    `,\n      fcl.args([\n        fcl.arg(user.addr, t.Address), // <-- t.Address this time :)\n      ]),\n    ])\n    .then(fcl.decode);\n\n  return parseFloat(balance);\n}\n\nexport async function getUserHaikus(user) {\n  const haikus = await fcl\n    .send([\n      fcl.script`\n      import HaikuNFT from 0xHAIKUNFTADDRESS\n      import NonFungibleToken from 0xNONFUNGIBLETOKENADDRESS\n      \n      pub fun main(address: Address): {UInt64: String} {\n        let account = getAccount(address)\n        let capability = account.getCapability(HaikuNFT.HaikuCollectionPublicPath)\n        let ref = capability.borrow<&{HaikuNFT.HaikuCollectionPublic, NonFungibleToken.CollectionPublic}>() ?? panic(\"Could not borrow\")\n      \n        let haikus: {UInt64: String} = {}\n      \n        for id in ref.getIDs() {\n          let nft = ref.borrowNFT(id: id)\n          haikus[id] = ref.borrowHaiku(id: id)!.text\n        }\n      \n        return haikus\n      }\n    `,\n      fcl.args([\n        fcl.arg(user.addr, t.Address), // <-- t.Address this time :)\n      ]),\n    ])\n    .then(fcl.decode);\n\n  for (const id in haikus) {\n    haikus[id] = { text: haikus[id], address: user.addr };\n  }\n\n  return haikus;\n}","import React, { useCallback, useEffect, useState, useContext } from \"react\";\nimport * as fcl from \"@onflow/fcl\";\nimport { getBalance, getUserHaikus } from \"../cadence/scripts\";\n\nconst UserStateContext = React.createContext();\n\nexport function UserStateProvider({ children }) {\n  const [balance, setBalance] = useState(0);\n  const [userHaikus, setUserHaikus] = useState(null);\n\n  return <UserStateContext.Provider value={{ balance, setBalance, userHaikus, setUserHaikus }} children={children} />\n}\n\nexport function useCurrentUser() {\n  const [user, setUser] = useState({ loggedIn: null });\n  const { balance, setBalance, userHaikus, setUserHaikus } = useContext(UserStateContext);\n\n  useEffect(() => fcl.currentUser().subscribe(setUser), []);\n\n  const updateBalance = useCallback(async () => {\n    try {\n      const balance = await getBalance(user);\n      setBalance(balance);\n    } catch {\n      setBalance(null);\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (user.loggedIn) {\n      updateBalance();\n    } else {\n      setBalance(0);\n    }\n  }, [user]);\n\n  useEffect(() => {\n    async function getHaikus() {\n      try {\n        const haikus = await getUserHaikus(user);\n        setUserHaikus(haikus);\n      } catch { }\n    }\n\n    if (user.loggedIn) {\n      getHaikus();\n    } else {\n      setUserHaikus(null);\n    }\n  }, [user]);\n\n  return { user, balance, updateBalance, userHaikus, setUserHaikus };\n}\n\nexport default useCurrentUser;","// https://stackoverflow.com/a/58443076\nimport React from \"react\";\n\nconst useReactPath = () => {\n  const [path, setPath] = React.useState(window.location.hash);\n  const listenToPopstate = () => {\n    const winPath = window.location.hash;\n    setPath(winPath);\n  };\n  React.useEffect(() => {\n    window.addEventListener(\"popstate\", listenToPopstate);\n    //window.addEventListener(\"pushstate\", listenToPopstate);\n    return () => {\n      window.removeEventListener(\"popstate\", listenToPopstate);\n      //window.removeEventListener(\"pushstate\", listenToPopstate);\n    };\n  }, []);\n  return path;\n};\n\nexport default useReactPath;","import * as fcl from \"@onflow/fcl\"\nimport * as t from \"@onflow/types\";\nimport { FLOWSCAN_URL } from \"../config\";\n\nfunction showTransactionLink(txId, setError) {\n  const flowScanLink = FLOWSCAN_URL + txId;\n  setError({\n    text: <span> Transaction Submitted. View Status on&nbsp;\n      <a href={flowScanLink} target=\"_blank\">Flowscan</a>\n      .\n    </span>,\n    severity: \"success\"\n  });\n}\n\nexport const MINT_HAIKU_TRANSACTION = `\nimport FungibleToken from 0xFUNGIBLETOKENADDRESS\nimport FlowToken from 0xTOKENADDRESS\nimport FUSD from 0xFUSDADDRESS\nimport NonFungibleToken from 0xNONFUNGIBLETOKENADDRESS\n\nimport HaikuNFT from 0xHAIKUNFTADDRESS\n\ntransaction (haikuID: UInt64, price: UFix64) {\n    let collection: &NonFungibleToken.Collection\n    let sentVault: @FungibleToken.Vault\n    let receiverRef: &FlowToken.Vault{FungibleToken.Receiver}\n    \n    prepare(signer: AuthAccount) {\n        // if the account doesn't already have a collection\n        if signer.borrow<&HaikuNFT.Collection>(from: HaikuNFT.HaikuCollectionStoragePath) == nil {\n\n\n            // create a new empty collection\n            let collection <- HaikuNFT.createEmptyCollection()\n            \n            // save it to the account\n            signer.save(<-collection, to: HaikuNFT.HaikuCollectionStoragePath)\n\n            // create a public capability for the collection\n            signer.link<&{NonFungibleToken.CollectionPublic, HaikuNFT.HaikuCollectionPublic}>(HaikuNFT.HaikuCollectionPublicPath, target: HaikuNFT.HaikuCollectionStoragePath)\n        }\n\n        self.collection = signer.borrow<&NonFungibleToken.Collection>(from: HaikuNFT.HaikuCollectionStoragePath) \n             ?? panic(\"Could not borrow reference to NFT Collection!\")\n\n        // Get a reference to the signer's stored vault\n        let vaultRef = signer.borrow<&FUSD.Vault>(from: /storage/fusdVault)\n          ?? panic(\"Could not borrow reference to the owner's FUSD Vault!\")\n\n        // Get a reference to the signer's FLOW receiver to receive FLOW necessary to ensure they have\n        // enough storage\n        self.receiverRef =  signer\n          .getCapability(/public/flowTokenReceiver)\n          .borrow<&FlowToken.Vault{FungibleToken.Receiver}>()\n        ?? panic(\"Could not borrow receiver reference to the recipient's Vault\")\n\n        // Withdraw tokens from the signer's stored vault\n        self.sentVault <- vaultRef.withdraw(amount: price)\n    }\n\n    execute {\n        HaikuNFT.mintHaiku(recipient: self.collection, vault: <- self.sentVault, id: haikuID, flowReceiverRef: self.receiverRef)\n    }\n}\n`;\n\nexport async function mintHaikuTransaction(nextHaiku, setError) {\n  const txId = await fcl.send([\n    fcl.transaction(MINT_HAIKU_TRANSACTION),\n    fcl.args([\n      fcl.arg(nextHaiku.id, t.UInt64),\n      fcl.arg(nextHaiku.price.toFixed(8), t.UFix64),\n    ]),\n    fcl.payer(fcl.authz), // current user is responsible for paying for the transaction\n    fcl.proposer(fcl.authz), // current user acting as the nonce\n    fcl.authorizations([fcl.authz]), // current user will be first AuthAccount\n    fcl.limit(9999), // set the compute limit\n  ])\n    .then(fcl.decode);\n\n  showTransactionLink(txId, setError);\n\n  return fcl.tx(txId).onceSealed();\n}\n\n// Copied from https://docs.onflow.org/fusd/transactions/\nexport const SETUP_FUSD_VAULT = `\nimport FungibleToken from 0xFUNGIBLETOKENADDRESS\nimport FUSD from 0xFUSDADDRESS\n\ntransaction {\n\n  prepare(signer: AuthAccount) {\n\n    // It's OK if the account already has a Vault, but we don't want to replace it\n    if(signer.borrow<&FUSD.Vault>(from: /storage/fusdVault) != nil) {\n      return\n    }\n    \n    // Create a new FUSD Vault and put it in storage\n    signer.save(<-FUSD.createEmptyVault(), to: /storage/fusdVault)\n\n    // Create a public capability to the Vault that only exposes\n    // the deposit function through the Receiver interface\n    signer.link<&FUSD.Vault{FungibleToken.Receiver}>(\n      /public/fusdReceiver,\n      target: /storage/fusdVault\n    )\n\n    // Create a public capability to the Vault that only exposes\n    // the balance field through the Balance interface\n    signer.link<&FUSD.Vault{FungibleToken.Balance}>(\n      /public/fusdBalance,\n      target: /storage/fusdVault\n    )\n  }\n}\n`;\n\nexport async function setupFUSDVaultTransaction(setError) {\n  const txId = await fcl.send([\n    fcl.transaction(SETUP_FUSD_VAULT),\n    fcl.payer(fcl.authz), // current user is responsible for paying for the transaction\n    fcl.proposer(fcl.authz), // current user acting as the nonce\n    fcl.authorizations([fcl.authz]), // current user will be first AuthAccount\n    fcl.limit(99), // set the compute limit\n  ])\n    .then(fcl.decode);\n\n  showTransactionLink(txId, setError);\n\n  return fcl.tx(txId).onceSealed();\n}\n\nexport const SETUP_COLLECTION_TRANSACTION = `\nimport NonFungibleToken from 0xNONFUNGIBLETOKENADDRESS\n\nimport HaikuNFT from 0xHAIKUNFTADDRESS\n\ntransaction () {\n    prepare(signer: AuthAccount) {\n        // if the account doesn't already have a collection\n        if signer.borrow<&HaikuNFT.Collection>(from: HaikuNFT.HaikuCollectionStoragePath) == nil {\n            // create a new empty collection\n            let collection <- HaikuNFT.createEmptyCollection()\n            \n            // save it to the account\n            signer.save(<-collection, to: HaikuNFT.HaikuCollectionStoragePath)\n\n            // create a public capability for the collection\n            signer.link<&{NonFungibleToken.CollectionPublic, HaikuNFT.HaikuCollectionPublic}>(HaikuNFT.HaikuCollectionPublicPath, target: HaikuNFT.HaikuCollectionStoragePath)\n        }\n    }\n}\n`;\n\nexport async function setupBitkuCollectionTransaction(setError) {\n  const txId = await fcl.send([\n    fcl.transaction(SETUP_COLLECTION_TRANSACTION),\n    fcl.payer(fcl.authz), // current user is responsible for paying for the transaction\n    fcl.proposer(fcl.authz), // current user acting as the nonce\n    fcl.authorizations([fcl.authz]), // current user will be first AuthAccount\n    fcl.limit(99), // set the compute limit\n  ])\n    .then(fcl.decode);\n\n  showTransactionLink(txId, setError);\n\n  return fcl.tx(txId).onceSealed();\n}\n\nexport const SEND_BITKU_TRANSACTION = `\nimport NonFungibleToken from 0xNONFUNGIBLETOKENADDRESS\n\nimport HaikuNFT from 0xHAIKUNFTADDRESS\n\ntransaction (haikuID: UInt64, targetAddress: Address) {\n  let targetCollection: &AnyResource{NonFungibleToken.CollectionPublic}\n  let haiku: @NonFungibleToken.NFT\n  \n  prepare(signer: AuthAccount) {\n    // Get the sender's collection\n    let collection = signer.borrow<&HaikuNFT.Collection>(from: HaikuNFT.HaikuCollectionStoragePath)\n      ?? panic(\"Could not borrow reference to source account's Bitku Collection!\")\n\n    // Withdraw the haiku\n    self.haiku <- collection.withdraw(withdrawID: haikuID)\n\n    // Get the receiver's collection\n    let targetAccount = getAccount(targetAddress)\n    self.targetCollection = targetAccount.getCapability(HaikuNFT.HaikuCollectionPublicPath).borrow<&{NonFungibleToken.CollectionPublic}>()\n      ?? panic(\"Could not borrow reference to target account's Bitku Receiver!\")\n  }\n\n  execute {\n    self.targetCollection.deposit(token: <- self.haiku)\n  }\n}\n`\n\nexport async function sendBitkuTransaction(haikuID, targetAddress, setError) {\n  const txId = await fcl.send([\n    fcl.transaction(SEND_BITKU_TRANSACTION),\n    fcl.args([\n      fcl.arg(parseInt(haikuID), t.UInt64),\n      fcl.arg(targetAddress, t.Address),\n    ]),\n    fcl.payer(fcl.authz), // current user is responsible for paying for the transaction\n    fcl.proposer(fcl.authz), // current user acting as the nonce\n    fcl.authorizations([fcl.authz]), // current user will be first AuthAccount\n    fcl.limit(99), // set the compute limit\n  ])\n    .then(fcl.decode);\n\n  showTransactionLink(txId, setError);\n\n  return fcl.tx(txId).onceSealed();\n}","// File: ./src/auth-cluster.js\n\nimport React, { useState } from \"react\"\nimport * as fcl from \"@onflow/fcl\"\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Typography from '@material-ui/core/Typography';\n\nimport useCurrentUser from \"../hooks/useCurrentUser\";\nimport { setupFUSDVaultTransaction, setupBitkuCollectionTransaction } from \"../cadence/transactions\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    // position: \"absolute\",\n    // top: theme.spacing(1),\n    // right: theme.spacing(1)\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    padding: theme.spacing(1)\n  },\n  button: {\n\n  },\n  about: {\n    color: \"black\"\n  }\n}))\n\nexport function AuthCluster({ setError }) {\n  const classes = useStyles();\n  const { user, balance, updateBalance, userHaikus, setUserHaikus } = useCurrentUser();\n  const [menuAnchor, setMenuAnchor] = useState(null);\n\n  const handleClose = () => {\n    setMenuAnchor(null);\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h5\"><a href=\"https://github.com/docmarionum1/bitku#readme\" target=\"_blank\" className={classes.about}>About</a></Typography>\n      {user.loggedIn ?\n        <React.Fragment>\n          <div>\n            <Button variant=\"outlined\" onClick={(event) => { setMenuAnchor(event.currentTarget) }}>{user.addr}</Button>\n          </div>\n          <Menu\n            anchorEl={menuAnchor}\n            keepMounted\n            open={!!menuAnchor}\n            onClose={handleClose}\n          >\n            {balance === null ?\n              <MenuItem onClick={async () => {\n                handleClose();\n                await setupFUSDVaultTransaction(setError);\n                updateBalance();\n              }}>Enable FUSD on this wallet</MenuItem> :\n              <MenuItem disabled>{balance} FUSD</MenuItem>\n            }\n            {userHaikus == null && <MenuItem onClick={async () => {\n              handleClose();\n              await setupBitkuCollectionTransaction(setError);\n              setUserHaikus({});\n            }}>\n              Create empty Bitku collection\n            </MenuItem>\n            }\n            <MenuItem onClick={() => {\n              handleClose();\n              fcl.unauthenticate();\n            }}>Log Out</MenuItem>\n          </Menu>\n        </React.Fragment> :\n        <div>\n          <Button variant=\"outlined\" onClick={fcl.logIn}>Connect Wallet</Button>\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default AuthCluster;","import React, { useState, useEffect, useCallback } from \"react\"\n\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TypeWriter from 'react-typewriter';\n\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\n\nimport { LOGO_URL } from \"../config\";\nimport { getHaikus, getNextIDAndPrice } from \"../cadence/scripts\";\nimport { mintHaikuTransaction } from \"../cadence/transactions\";\nimport useCurrentUser from \"../hooks/useCurrentUser\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: \"20rem\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-evenly\"\n  },\n  popper: {\n    top: '10px !important',\n    zIndex: 100\n  },\n  tooltip: {\n    fontSize: '1rem',\n    maxWidth: 'none',\n  },\n  link: {\n    color: 'inherit'\n  }\n}));\n\nexport function Mint({ setError }) {\n  const classes = useStyles();\n\n  const [nextHaiku, setNextHaiku] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [haiku, setHaiku] = useState(null);\n  const { user, balance, updateBalance, setUserHaikus } = useCurrentUser();\n  const [rampMinPurchaseAmount, setRampMinPurchaseAmount] = useState(null);\n\n  useEffect(() => {\n    async function fetchFUSDInfo() {\n      const response = await fetch(\"https://api-instant.ramp.network/api/host-api/assets\");\n      const assets = await response.json();\n      const fusd = assets.assets.filter(asset => asset.symbol == \"FLOW_FUSD\")[0];\n\n      setRampMinPurchaseAmount(fusd.priceEur * fusd.minPurchaseAmountEur);\n    }\n\n    fetchFUSDInfo();\n  }, []);\n\n  useEffect(() => {\n    async function fetch() {\n      setLoading(true);\n      setNextHaiku(await getNextIDAndPrice());\n      setLoading(false);\n    }\n\n    if (nextHaiku === null) {\n      fetch();\n    }\n  }, [nextHaiku]);\n\n  useEffect(() => {\n    if (!user.loggedIn) {\n      setHaiku(null);\n    }\n  }, [user]);\n\n  const mintHaiku = useCallback(async () => {\n    setLoading(true);\n    try {\n      // Mint the new haiku and get the text\n      await mintHaikuTransaction(nextHaiku, setError);\n\n      window.scrollTo(0, 0);\n      const response = await getHaikus([{ key: nextHaiku.id, value: user.addr }]);\n      const text = response[Object.keys(response)[0]].text;\n\n      // Update the newly minted haiku component\n      setHaiku({\n        id: nextHaiku.id,\n        text: text,\n      });\n\n      // Add it to the user's list of haiku\n      setUserHaikus((haikus) => {\n        return { ...haikus, [nextHaiku.id]: { text: text, address: user.addr } };\n      });\n\n      setNextHaiku(null);\n      updateBalance();\n      setError(null);\n    } catch (e) {\n      const message = e.message ? e.message : e;\n      if (message !== \"Declined: Externally Halted\" && message !== \"Declined: User rejected signature\") {\n        setError({ text: message, severity: \"error\" });\n      }\n      setNextHaiku(null);\n    }\n  }, [user, nextHaiku]);\n\n  if (loading) {\n    return (\n      <div className=\"spinner\" id=\"spinner\">\n        <div className=\"double-bounce1\"></div>\n        <div className=\"double-bounce2\"></div>\n      </div>\n    );\n  }\n\n  const mintingDisabled = !user.loggedIn || nextHaiku === null || balance === null || balance < nextHaiku.price;\n  let tooltipTitle = `Mint Bitku #${nextHaiku.id} for ${nextHaiku.price} FUSD`;\n\n  if (!user.loggedIn) {\n    tooltipTitle = \"To mint a Bitku, please connect your wallet using the menu in the top right\";\n  } else if (balance === null) {\n    tooltipTitle = \"To mint a Bitku, please enable FUSD for your wallet using the menu in the top right\";\n  } else if (balance < nextHaiku.price) {\n    tooltipTitle = <span>\n      You don't have enough FUSD.&nbsp;\n      {rampMinPurchaseAmount &&\n        <React.Fragment>\n          <a href=\"#\" className={classes.link} onClick={() => {\n            new RampInstantSDK({\n              hostAppName: 'Bitku',\n              hostLogoUrl: LOGO_URL,\n              swapAmount: Math.ceil(Math.max(nextHaiku.price - balance, rampMinPurchaseAmount) * Math.pow(10, 8)),\n              swapAsset: \"FLOW_FUSD\",\n              userAddress: user.addr,\n              fiatCurrency: \"EUR\"\n            }).show();\n          }}>\n            Buy {Math.max(nextHaiku.price - balance, rampMinPurchaseAmount).toFixed(2)} FUSD\n          </a>.\n        </React.Fragment>\n      }\n    </span>;\n  } else if (nextHaiku === null) {\n    tooltipTitle = \"No Bitkus remaining\";\n  }\n\n  return (\n    <div className={classes.root}>\n      {haiku &&\n        <div>\n          <Typography variant=\"h6\">{haiku.id}</Typography>\n          <Typography variant=\"body2\"><TypeWriter typing={1} fixed={true}>{haiku.text}</TypeWriter></Typography>\n        </div>\n      }\n      <div>\n        <Tooltip interactive classes={{ popper: classes.popper, tooltip: classes.tooltip }} title={tooltipTitle} open={mintingDisabled} placement=\"bottom\" arrow>\n          <span>\n            <Button variant=\"outlined\" disabled={mintingDisabled} onClick={mintHaiku}>\n              Mint Bitku #{nextHaiku.id}/1024 ({nextHaiku.price} FUSD)\n            </Button>\n          </span>\n        </Tooltip>\n      </div>\n    </div>\n  );\n}\n\nexport default Mint;","import React, { useState, useEffect } from \"react\"\n\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper } from \"@material-ui/core\";\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport TextField from '@material-ui/core/TextField';\n\nimport { sendBitkuTransaction } from \"../cadence/transactions\";\nimport useCurrentUser from \"../hooks/useCurrentUser\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginBottom: theme.spacing(4),\n  },\n  paper: {\n    //width: \"fit-content\",\n    padding: theme.spacing(2),\n    borderRadius: theme.spacing(.5),\n    height: '12em',\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  menuContainer: {\n    display: \"flex\",\n    flexDirection: \"row-reverse\",\n    height: \"10px\",\n  },\n  iconButton: {\n    '&:hover': {\n      backgroundColor: \"rgba(0, 0, 0, 0)\"\n    },\n    color: \"rgba(0, 0, 0, .4)\",\n    padding: 0\n  },\n  sendDialog: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  }\n}));\n\nexport function Haikus({ haikus, heading, order, userHaikus = false, setError = () => { } }) {\n  const classes = useStyles();\n  const { user, setUserHaikus } = useCurrentUser();\n\n  const ids = order ? order : haikus ? Object.keys(haikus) : [];\n\n  const [menuAnchor, setMenuAnchor] = useState({ el: null, haiku: null });\n  const handleCloseMenu = () => {\n    setMenuAnchor({ el: null, haiku: null });\n  };\n\n  const [sendDialog, setSendDialog] = useState({ open: false, haiku: null });\n  const handleCloseDialog = () => {\n    setSendDialog({ open: false, haiku: null });\n    setSendAddress(\"\");\n  };\n  const [sendAddress, setSendAddress] = useState(\"\");\n\n  const sendDisabled = !sendAddress.match(/^0x[a-zA-Z0-9]{16}$/) || sendAddress == user.addr;\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h4\">{heading}</Typography>\n      <Grid container spacing={3} justifyContent=\"center\">\n        {haikus && ids.map((id) => (\n          haikus[id] &&\n          <Grid item xs={12} sm={6} md={6} lg={4} key={id}>\n            <Paper elevation={3} className={classes.paper}>\n              <div className={classes.menuContainer}>\n                <IconButton className={classes.iconButton} onClick={(event) => {\n                  setMenuAnchor({ el: event.currentTarget, haiku: id });\n                }}>\n                  <MenuIcon />\n                </IconButton>\n              </div>\n              <Typography variant=\"h6\">{id}</Typography>\n              <Typography variant=\"body2\">{haikus[id].text}</Typography>\n            </Paper>\n          </Grid>\n        ))}\n      </Grid>\n      <Menu\n        anchorEl={menuAnchor.el}\n        keepMounted\n        open={!!menuAnchor.el}\n        onClose={handleCloseMenu}\n      >\n        <MenuItem onClick={() => {\n          navigator.clipboard.writeText(\n            `${window.location.host}/${haikus[menuAnchor.haiku].address}/${menuAnchor.haiku}`\n          );\n          handleCloseMenu();\n        }}>Copy link</MenuItem>\n        {userHaikus && <MenuItem onClick={() => {\n          setSendDialog({ open: true, haiku: menuAnchor.haiku });\n          handleCloseMenu();\n        }}>Send Bitku #{menuAnchor.haiku} to Another Address</MenuItem>}\n      </Menu>\n      {userHaikus &&\n        <Dialog\n          open={!!sendDialog.open}\n          onClose={handleCloseDialog}\n        >\n          <DialogTitle><Typography variant=\"h5\">Send Bitku #{sendDialog.haiku} to another address</Typography></DialogTitle>\n          <DialogContent className={classes.sendDialog}>\n            <Typography style={{ fontStyle: \"italic\" }}>\n              Ensure that the address has a Bitku collection.\n            </Typography>\n            <Typography style={{ fontStyle: \"italic\", marginBottom: \"20px\" }}>\n              <a href=\"https://github.com/docmarionum1/bitku#how-to-send-a-bitku-to-another-account\" target=\"_blank\">\n                Instructions\n              </a>\n            </Typography>\n            <TextField\n              label=\"0xaddress\"\n              variant=\"outlined\"\n              value={sendAddress}\n              onChange={(event) => setSendAddress(event.target.value)}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button autoFocus onClick={handleCloseDialog} color=\"secondary\" variant=\"outlined\">Cancel</Button>\n            <Button variant=\"outlined\" disabled={sendDisabled} onClick={async () => {\n              handleCloseDialog();\n              try {\n                await sendBitkuTransaction(sendDialog.haiku, sendAddress, setError);\n                setUserHaikus((haikus) => {\n                  const newHaikus = { ...haikus };\n                  delete newHaikus[sendDialog.haiku];\n                  return newHaikus;\n                });\n              } catch (e) {\n                setError({ text: e.message ? e.message : e, severity: \"error\" });\n              }\n            }}>Send</Button>\n          </DialogActions>\n        </Dialog>\n      }\n    </div>\n  );\n}\n\nexport default Haikus;","import React, { useState, useEffect } from \"react\";\nimport './App.css';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme, ThemeProvider, makeStyles } from '@material-ui/core/styles';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\nimport { Typography } from \"@material-ui/core\";\nimport Container from '@material-ui/core/Container';\nimport TypeWriter from 'react-typewriter';\n\n\n\nimport { useCurrentUser } from \"./hooks/useCurrentUser\";\nimport useReactPath from \"./hooks/useReactPath\";\nimport AuthCluster from \"./components/AuthCluster\";\nimport Mint from './components/Mint';\nimport Haikus from './components/Haikus';\nimport { getHaikus, getUserHaikus } from './cadence/scripts';\nimport { FEATURED_ADDRESS } from \"./config\";\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: [\n      '\"Courier New\"',\n      'courier',\n      'monospace'\n    ].join(','),\n    h6: {\n      textAlign: \"center\",\n      textDecoration: \"underline\",\n      fontSize: \"1rem\",\n      fontWeight: \"bold\"\n    },\n    h4: {\n      marginBottom: \"1rem\",\n      textDecoration: \"underline\"\n    },\n    body2: {\n      textAlign: \"center\",\n      whiteSpace: \"pre\",\n      flexGrow: 1,\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n    }\n  },\n  shape: {\n    borderRadius: 32\n  }\n});\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    textAlign: \"center\"\n  },\n  alert: {\n    flexDirection: \"row\"\n  },\n  title: {\n    color: \"black\",\n    textDecoration: \"underline\",\n    cursor: \"pointer\"\n  }\n}));\n\n\nfunction App() {\n  const classes = useStyles();\n  const [error, setError] = useState(null);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [typingEnd, setTypingEnd] = useState(false);\n  const { userHaikus } = useCurrentUser();\n  const featuredHaikuAddresses = [\n    { key: 189, value: \"0x002c479c5c9eb30f\" }, // papavader's\n    { key: 40, value: FEATURED_ADDRESS },\n    { key: 221, value: \"0x5f563944d3f15ed7\" }, // slackhash's\n    { key: 29, value: FEATURED_ADDRESS },\n    { key: 199, value: \"0xcd642845e5f48fdd\" }, // xu's\n    { key: 0, value: FEATURED_ADDRESS },\n    { key: 4, value: FEATURED_ADDRESS },\n    { key: 5, value: FEATURED_ADDRESS },\n    { key: 180, value: \"0x877538e6851faa5d\" }, // mrpowergage's\n    { key: 28, value: FEATURED_ADDRESS },\n    { key: 41, value: FEATURED_ADDRESS },\n  ]\n  const featuredOrder = [189, 40, 221, 29, 199, 0, 4, 5, 180, 28, 41];\n  const [featuredHaikus, setFeaturedHaikus] = useState({});\n  const path = useReactPath();\n  const [linkedHaiku, setLinkedHaiku] = useState(null);\n  const [linkedHaikuHeader, setLinkedHaikuHeader] = useState(null);\n\n  const handleErrorClose = () => setSnackbarOpen(false);\n\n  useEffect(() => {\n    if (error !== null) {\n      setSnackbarOpen(true);\n    }\n  }, [error]);\n\n  useEffect(() => {\n    async function getText() {\n      const requestedHaikus = [];\n      for (const haiku of featuredHaikuAddresses) {\n        requestedHaikus.push(haiku);\n      }\n      setFeaturedHaikus(await getHaikus(requestedHaikus));\n    }\n\n    getText();\n  }, []);\n\n  useEffect(() => {\n    async function getText() {\n      const urlParts = path.replace(\"#\", \"\").split(\"/\");\n      console.log(urlParts);\n\n      if (urlParts.length < 1) {\n        setLinkedHaikuHeader(null);\n        return;\n      }\n\n      const address = urlParts[0];\n\n      if (address !== \"\") {\n        if (urlParts.length == 1) {\n          try {\n            setLinkedHaiku(await getUserHaikus({ addr: address }));\n            setLinkedHaikuHeader(address);\n            return;\n          } catch { }\n        } else {\n          try {\n            const haikuID = parseInt(urlParts[1]);\n            const haikus = await getHaikus([{ key: haikuID, value: address }]);\n            if (Object.keys(haikus).length > 0) {\n              setLinkedHaiku(haikus);\n              setLinkedHaikuHeader(haikuID);\n              return;\n            }\n          } catch { }\n        }\n      }\n\n      setLinkedHaiku(null);\n      setLinkedHaikuHeader(null);\n    }\n\n    getText();\n  }, [path]);\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <ThemeProvider theme={theme}>\n        <div className={classes.root}>\n          <AuthCluster setError={setError} />\n          <Container>\n            <a className={classes.title} onClick={() => {\n              window.history.pushState(null, \"Bitku\", \"/\");\n              const popStateEvent = new PopStateEvent('popstate');\n              dispatchEvent(popStateEvent);\n            }}>\n              <Typography variant=\"h1\">\n                <TypeWriter\n                  typing={1}\n                  onTypingEnd={() => setTypingEnd(true)}\n                >\n                  Bitku\n                </TypeWriter>\n              </Typography>\n            </a>\n            {typingEnd &&\n              <React.Fragment>\n                <Mint setError={setError} />\n                {linkedHaikuHeader !== null && linkedHaiku && <Haikus haikus={linkedHaiku} heading={linkedHaikuHeader} />}\n                <Haikus haikus={featuredHaikus} order={featuredOrder} heading=\"Featured\" />\n                <Haikus haikus={userHaikus} heading=\"My Bitku\" userHaikus={true} setError={setError} />\n              </React.Fragment>\n            }\n            {error &&\n              <Snackbar open={snackbarOpen} autoHideDuration={10000} onClose={handleErrorClose}>\n                <Alert onClose={handleErrorClose} severity={error.severity} className={classes.alert}>\n                  {error.text}\n                </Alert>\n              </Snackbar>\n            }\n          </Container>\n        </div>\n      </ThemeProvider>\n    </React.Fragment >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./config\"\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {UserStateProvider} from \"./hooks/useCurrentUser\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <UserStateProvider>\n      <App />\n    </UserStateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}