{"version":3,"sources":["config.js","cadence/scripts.js","hooks/useCurrentUser.js","hooks/useReactPath.js","cadence/transactions.js","components/AuthCluster.js","components/Mint.js","components/Haikus.js","App.js","reportWebVitals.js","index.js"],"names":["config","put","process","FEATURED_ADDRESS","LOGO_URL","FLOWSCAN_URL","contract_address","GET_NEXT_ID_AND_PRICE","getNextIDAndPrice","a","fcl","then","response","id","Object","keys","parseInt","price","parseFloat","GET_HAIKUS","getHaikus","haikus","t","key","value","haikuText","getBalance","user","addr","balance","getUserHaikus","text","address","getFindProfile","groups","match","UserStateContext","React","createContext","UserStateProvider","children","useState","setBalance","userHaikus","setUserHaikus","Provider","useCurrentUser","loggedIn","setUser","useContext","useEffect","subscribe","updateBalance","useCallback","useReactPath","window","location","hash","path","setPath","listenToPopstate","winPath","addEventListener","removeEventListener","showTransactionLink","txId","setError","flowScanLink","href","target","rel","severity","MINT_HAIKU_TRANSACTION","mintHaikuTransaction","nextHaiku","toFixed","onceSealed","SETUP_FUSD_VAULT","setupFUSDVaultTransaction","SETUP_COLLECTION_TRANSACTION","setupBitkuCollectionTransaction","SEND_BITKU_TRANSACTION","sendBitkuTransaction","haikuID","targetAddress","useStyles","makeStyles","theme","root","display","justifyContent","padding","spacing","button","about","color","AuthCluster","classes","menuAnchor","setMenuAnchor","handleClose","className","Typography","variant","Fragment","Button","onClick","event","currentTarget","Menu","anchorEl","keepMounted","open","onClose","MenuItem","disabled","height","flexDirection","popper","top","zIndex","tooltip","fontSize","maxWidth","link","Mint","setNextHaiku","loading","setLoading","haiku","setHaiku","rampMinPurchaseAmount","setRampMinPurchaseAmount","fetch","json","assets","fusd","filter","asset","symbol","priceEur","minPurchaseAmountEur","fetchFUSDInfo","mintHaiku","scrollTo","message","mintingDisabled","tooltipTitle","RampInstantSDK","hostAppName","hostLogoUrl","swapAmount","Math","ceil","max","pow","swapAsset","userAddress","fiatCurrency","show","typing","fixed","Tooltip","interactive","title","placement","arrow","marginBottom","paper","borderRadius","menuContainer","iconButton","backgroundColor","sendDialog","alignItems","avatar","width","margin","heading","Haikus","order","ids","el","handleCloseMenu","setSendDialog","handleCloseDialog","setSendAddress","sendAddress","sendDisabled","Grid","container","map","item","xs","sm","md","lg","Paper","elevation","findName","Avatar","alt","src","findAvatar","IconButton","navigator","clipboard","writeText","host","Dialog","DialogTitle","DialogContent","style","fontStyle","TextField","label","onChange","DialogActions","autoFocus","newHaikus","createMuiTheme","typography","fontFamily","join","h6","textAlign","textDecoration","fontWeight","h4","body2","whiteSpace","flexGrow","shape","alert","cursor","verticalAlign","featuredHaikuAddresses","featuredOrder","App","error","snackbarOpen","setSnackbarOpen","typingEnd","setTypingEnd","featuredHaikus","setFeaturedHaikus","linkedHaiku","setLinkedHaiku","linkedHaikuHeader","setLinkedHaikuHeader","handleErrorClose","getText","onlyContractAddress","requestedHaikus","push","tryGetText","urlParts","replace","split","length","header","findProfile","name","CssBaseline","ThemeProvider","Container","history","pushState","popStateEvent","PopStateEvent","dispatchEvent","onTypingEnd","Snackbar","autoHideDuration","Alert","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8JAEAA,cACGC,IAAI,iBAAkBC,mCACtBD,IAAI,mBAAoBC,kDACxBD,IAAI,0BAA2BC,sDAC/BD,IAAI,mBAAoB,SACxBA,IAAI,kBAAmB,iCAGnB,IAAIE,EAAmB,GACnBC,EAAW,GACXC,EAAe,GAkBlBC,EAAmB,qBACzBN,cACGC,IAAI,yBAA0B,sBAC9BA,IAAI,iBAAkB,sBACtBA,IAAI,4BAA6B,sBACjCA,IAAI,oBAAqBK,GACzBL,IAAI,gBAAiB,sBACrBA,IAAI,yBAA0B,sBAC9BA,IAAI,gBAAiB,sBAExBE,EAAmBG,EACnBF,EAAW,wCACXC,EAAe,2C,2NCvCJE,EAAqB,oJAS3B,SAAeC,IAAtB,+B,4CAAO,8BAAAC,EAAA,sEACkBC,IACf,CACJA,IAAWH,KAEZI,KAAKD,KALH,cACCE,EADD,OAOCC,EAAKC,OAAOC,KAAKH,GAAU,GAP5B,kBAQE,CACLC,GAAIG,SAASH,GACbI,MAAOC,WAAWN,EAASC,MAVxB,4C,sBAcA,IAgBMM,EAAU,qyCA6EhB,SAAeC,EAAtB,kC,4CAAO,WAAyBC,GAAzB,eAAAZ,EAAA,sEACmBC,IAChB,CACJA,IAAqFS,GACrFT,IAAS,CACPA,IAAQW,EAAQC,IAAa,CAAEC,IAAKD,IAAUE,MAAOF,WAGxDX,KAAKD,KARH,cACCe,EADD,yBASEA,GATF,4C,sBAYA,SAAeC,EAAtB,kC,4CAAO,WAA0BC,GAA1B,eAAAlB,EAAA,sEACiBC,IACd,CACJA,IADI,2dAeJA,IAAS,CACPA,IAAQiB,EAAKC,KAAMN,SAGtBX,KAAKD,KArBH,cACCmB,EADD,yBAuBEX,WAAWW,IAvBb,4C,sBA0BA,SAAeC,EAAtB,kC,4CAAO,WAA6BH,GAA7B,iBAAAlB,EAAA,sEACgBC,IACb,CACJA,IADI,wsBAoBJA,IAAS,CACPA,IAAQiB,EAAKC,KAAMN,SAGtBX,KAAKD,KA1BH,OA4BL,IAAWG,KA3BLQ,EADD,OA6BHA,EAAOR,GAAM,CAAEkB,KAAMV,EAAOR,GAAKmB,QAASL,EAAKC,MA7B5C,yBAgCEP,GAhCF,4C,sBAmCA,SAAeY,EAAtB,kC,4CAAO,WAA8BN,GAA9B,eAAAlB,EAAA,2DACCyB,EAASP,EAAKQ,MAAM,8BADrB,0CAIYzB,IACL,CACJA,IADI,yOAQJA,IAAS,CACPA,IAAA,YAAawB,EAAO,IAAMZ,SAG7BX,KAAKD,KAjBP,iGAqBQA,IACL,CACJA,IADI,sNAQJA,IAAS,CACPA,IAAQiB,EAAML,SAGjBX,KAAKD,KAlCH,mG,iCC5LD0B,EAAmBC,IAAMC,gBAExB,SAASC,EAAT,GAA0C,IAAbC,EAAY,EAAZA,SAAY,EAChBC,mBAAS,GADO,mBACvCZ,EADuC,KAC9Ba,EAD8B,OAEVD,mBAAS,MAFC,mBAEvCE,EAFuC,KAE3BC,EAF2B,KAI9C,OAAO,cAACR,EAAiBS,SAAlB,CAA2BrB,MAAO,CAAEK,UAASa,aAAYC,aAAYC,iBAAiBJ,SAAUA,IAGlG,SAASM,IAAkB,IAAD,EACPL,mBAAS,CAAEM,SAAU,OADd,mBACxBpB,EADwB,KAClBqB,EADkB,OAE4BC,qBAAWb,GAA9DP,EAFuB,EAEvBA,QAASa,EAFc,EAEdA,WAAYC,EAFE,EAEFA,WAAYC,EAFV,EAEUA,cAEzCM,qBAAU,kBAAMxC,MAAkByC,UAAUH,KAAU,IAEtD,IAAMI,EAAgBC,sBAAW,sBAAC,4BAAA5C,EAAA,+EAERiB,EAAWC,GAFH,OAExBE,EAFwB,OAG9Ba,EAAWb,GAHmB,gDAK9Ba,EAAW,MALmB,yDAO/B,CAACf,EAAMe,IAyBV,OAvBAQ,qBAAU,WACJvB,EAAKoB,SACPK,IAEAV,EAAW,KAEZ,CAACf,EAAMe,EAAYU,IAEtBF,qBAAU,WAAM,4CACd,4BAAAzC,EAAA,+EAEyBqB,EAAcH,GAFvC,OAEUN,EAFV,OAGIuB,EAAcvB,GAHlB,wGADc,sBAQVM,EAAKoB,SARM,WAAD,wBASZ3B,GAEAwB,EAAc,QAEf,CAACjB,EAAMiB,IAEH,CAAEjB,OAAME,UAASuB,gBAAeT,aAAYC,iBAGtCE,QCpCAQ,EAfM,WAAO,IAAD,EACDjB,IAAMI,SAASc,OAAOC,SAASC,MAD9B,mBAClBC,EADkB,KACZC,EADY,KAEnBC,EAAmB,WACvB,IAAMC,EAAUN,OAAOC,SAASC,KAChCE,EAAQE,IAQV,OANAxB,IAAMa,WAAU,WAEd,OADAK,OAAOO,iBAAiB,WAAYF,GAC7B,WACLL,OAAOQ,oBAAoB,WAAYH,MAExC,IACIF,G,4BCXT,SAASM,GAAoBC,EAAMC,GACjC,IAAMC,EAAe9D,EAAe4D,EACpCC,EAAS,CACPnC,KAAM,8EACJ,mBAAGqC,KAAMD,EAAcE,OAAO,SAASC,IAAI,aAA3C,sBADI,OAINC,SAAU,YAIP,IAAMC,GAAsB,8tEAoD5B,SAAeC,GAAtB,qC,8CAAO,WAAoCC,EAAWR,GAA/C,eAAAzD,EAAA,sEACcC,IAAS,CAC1BA,IAAgB8D,IAChB9D,IAAS,CACPA,IAAQgE,EAAU7D,GAAIS,KACtBZ,IAAQgE,EAAUzD,MAAM0D,QAAQ,GAAIrD,OAEtCZ,IAAUA,KACVA,IAAaA,KACbA,IAAmB,CAACA,MACpBA,IAAU,QAETC,KAAKD,KAZH,cAcLsD,GAbMC,EADD,OAcqBC,GAdrB,kBAgBExD,IAAOuD,GAAMW,cAhBf,4C,sBAoBA,IAAMC,GAAgB,07BAiCtB,SAAeC,GAAtB,mC,8CAAO,WAAyCZ,GAAzC,eAAAzD,EAAA,sEACcC,IAAS,CAC1BA,IAAgBmE,IAChBnE,IAAUA,KACVA,IAAaA,KACbA,IAAmB,CAACA,MACpBA,IAAU,MAETC,KAAKD,KARH,cAULsD,GATMC,EADD,OAUqBC,GAVrB,kBAYExD,IAAOuD,GAAMW,cAZf,4C,sBAeA,IAAMG,GAA4B,04BAsBlC,SAAeC,GAAtB,mC,8CAAO,WAA+Cd,GAA/C,eAAAzD,EAAA,sEACcC,IAAS,CAC1BA,IAAgBqE,IAChBrE,IAAUA,KACVA,IAAaA,KACbA,IAAmB,CAACA,MACpBA,IAAU,MAETC,KAAKD,KARH,cAULsD,GATMC,EADD,OAUqBC,GAVrB,kBAYExD,IAAOuD,GAAMW,cAZf,4C,sBAeA,IAAMK,GAAsB,6/BA6B5B,SAAeC,GAAtB,uC,8CAAO,WAAoCC,EAASC,EAAelB,GAA5D,eAAAzD,EAAA,sEACcC,IAAS,CAC1BA,IAAgBuE,IAChBvE,IAAS,CACPA,IAAQM,SAASmE,GAAU7D,KAC3BZ,IAAQ0E,EAAe9D,OAEzBZ,IAAUA,KACVA,IAAaA,KACbA,IAAmB,CAACA,MACpBA,IAAU,MAETC,KAAKD,KAZH,cAcLsD,GAbMC,EADD,OAcqBC,GAdrB,kBAgBExD,IAAOuD,GAAMW,cAhBf,4C,sBC5LP,IAAMS,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CAIJC,QAAS,OACTC,eAAgB,gBAChBC,QAASJ,EAAMK,QAAQ,IAEzBC,OAAQ,GAGRC,MAAO,CACLC,MAAO,aA6DIC,OAzDR,YAAoC,IAAb9B,EAAY,EAAZA,SACtB+B,EAAUZ,KADwB,EAE4BvC,IAA5DnB,EAFgC,EAEhCA,KAAME,EAF0B,EAE1BA,QAASuB,EAFiB,EAEjBA,cAAeT,EAFE,EAEFA,WAAYC,EAFV,EAEUA,cAFV,EAGJH,mBAAS,MAHL,mBAGjCyD,EAHiC,KAGrBC,EAHqB,KAKlCC,EAAc,WAClBD,EAAc,OAGhB,OACE,sBAAKE,UAAWJ,EAAQT,KAAxB,UACE,cAACc,EAAA,EAAD,CAAYC,QAAQ,KAApB,SACE,mBAAGnC,KAAK,+CAA+CC,OAAO,SAASgC,UAAWJ,EAAQH,MAAOxB,IAAI,aAArG,qBAID3C,EAAKoB,SACJ,eAAC,IAAMyD,SAAP,WACE,8BACE,cAACC,EAAA,EAAD,CAAQF,QAAQ,WAAWG,QAAS,SAACC,GAAYR,EAAcQ,EAAMC,gBAArE,SAAwFjF,EAAKC,SAE/F,eAACiF,EAAA,EAAD,CACEC,SAAUZ,EACVa,aAAW,EACXC,OAAQd,EACRe,QAASb,EAJX,UAMe,OAAZvE,EACC,cAACqF,GAAA,EAAD,CAAUR,QAAO,sBAAE,sBAAAjG,EAAA,6DACjB2F,IADiB,SAEXtB,GAA0BZ,GAFf,OAGjBd,IAHiB,2CAAnB,wCAKA,eAAC8D,GAAA,EAAD,CAAUC,UAAQ,EAAlB,UAAoBtF,EAApB,WAEa,MAAdc,GAAsB,cAACuE,GAAA,EAAD,CAAUR,QAAO,sBAAE,sBAAAjG,EAAA,6DACxC2F,IADwC,SAElCpB,GAAgCd,GAFE,OAGxCtB,EAAc,IAH0B,2CAAnB,2CAQvB,cAACsE,GAAA,EAAD,CAAUR,QAAS,WACjBN,IACA1F,OAFF,2BAMJ,8BACE,cAAC+F,EAAA,EAAD,CAAQF,QAAQ,WAAWG,QAAShG,IAApC,kC,sCCjEJ2E,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJ4B,OAAQ,QACR3B,QAAS,OACT4B,cAAe,SACf3B,eAAgB,gBAElB4B,OAAQ,CACNC,IAAK,kBACLC,OAAQ,KAEVC,QAAS,CACPC,SAAU,OACVC,SAAU,QAEZC,KAAM,CACJ7B,MAAO,eAyII8B,OArIR,YAA6B,IAAb3D,EAAY,EAAZA,SACf+B,EAAUZ,KADiB,EAGC5C,mBAAS,MAHV,mBAG1BiC,EAH0B,KAGfoD,EAHe,OAIHrF,oBAAS,GAJN,mBAI1BsF,EAJ0B,KAIjBC,EAJiB,OAKPvF,mBAAS,MALF,mBAK1BwF,EAL0B,KAKnBC,EALmB,OAMuBpF,IAAhDnB,EANyB,EAMzBA,KAAME,EANmB,EAMnBA,QAASuB,EANU,EAMVA,cAAeR,EANL,EAMKA,cANL,EAOyBH,mBAAS,MAPlC,mBAO1B0F,EAP0B,KAOHC,EAPG,KASjClF,qBAAU,WAAM,4CACd,gCAAAzC,EAAA,sEACyB4H,MAAM,wDAD/B,cACQzH,EADR,gBAEuBA,EAAS0H,OAFhC,OAEQC,EAFR,OAGQC,EAAOD,EAAOA,OAAOE,QAAO,SAAAC,GAAK,MAAqB,cAAjBA,EAAMC,UAAwB,GAEzEP,EAAyBI,EAAKI,SAAWJ,EAAKK,sBALhD,4CADc,uBAAC,WAAD,wBASdC,KACC,IAEH5F,qBAAU,WAAM,4CACd,sBAAAzC,EAAA,6DACEuH,GAAW,GADb,KAEEF,EAFF,SAEqBtH,IAFrB,kCAGEwH,GAAW,GAHb,4CADc,sBAOI,OAAdtD,GAPW,WAAD,wBAQZ2D,KAED,CAAC3D,IAEJxB,qBAAU,WACHvB,EAAKoB,UACRmF,EAAS,QAEV,CAACvG,IAEJ,IAAMoH,EAAY1F,sBAAW,sBAAC,gCAAA5C,EAAA,6DAC5BuH,GAAW,GADiB,kBAIpBvD,GAAqBC,EAAWR,GAJZ,cAM1BX,OAAOyF,SAAS,EAAG,GANO,SAOH5H,EAAU,CAAC,CAAEG,IAAKmD,EAAU7D,GAAIW,MAAOG,EAAKC,QAPzC,OAOpBhB,EAPoB,OAQpBmB,EAAOnB,EAASE,OAAOC,KAAKH,GAAU,IAAImB,KAGhDmG,EAAS,CACPrH,GAAI6D,EAAU7D,GACdkB,KAAMA,IAIRa,GAAc,SAACvB,GACb,OAAO,6BAAKA,GAAZ,mBAAqBqD,EAAU7D,GAAK,CAAEkB,KAAMA,EAAMC,QAASL,EAAKC,WAGlEkG,EAAa,MACb1E,IACAc,EAAS,MAvBiB,kDA0BV,iCADV+E,EAAU,KAAEA,QAAU,KAAEA,QAAd,OAC6C,sCAAZA,GAC/C/E,EAAS,CAAEnC,KAAMkH,EAAS1E,SAAU,UAEtCuD,EAAa,MA7Ba,0DA+B3B,CAACnG,EAAM+C,EAAWR,EAAUtB,EAAeQ,IAE9C,GAAI2E,EACF,OACE,sBAAK1B,UAAU,UAAUxF,GAAG,UAA5B,UACE,qBAAKwF,UAAU,mBACf,qBAAKA,UAAU,sBAKrB,IAAM6C,GAAmBvH,EAAKoB,UAA0B,OAAd2B,GAAkC,OAAZ7C,GAAoBA,EAAU6C,EAAUzD,MACpGkI,EAAY,sBAAkBzE,EAAU7D,GAA5B,gBAAsC6D,EAAUzD,MAAhD,SA8BhB,OA5BKU,EAAKoB,SAEa,OAAZlB,EACTsH,EAAe,sFACNtH,EAAU6C,EAAUzD,MAC7BkI,EAAe,mEAEZhB,GACC,eAAC,IAAM3B,SAAP,WACE,oBAAGpC,KAAK,IAAIiC,UAAWJ,EAAQ2B,KAAMlB,QAAS,WAC5C,IAAI0C,KAAe,CACjBC,YAAa,QACbC,YAAalJ,EACbmJ,WAAYC,KAAKC,KAAKD,KAAKE,IAAIhF,EAAUzD,MAAQY,EAASsG,GAAyBqB,KAAKG,IAAI,GAAI,IAChGC,UAAW,YACXC,YAAalI,EAAKC,KAClBkI,aAAc,QACbC,QARL,iBAUOP,KAAKE,IAAIhF,EAAUzD,MAAQY,EAASsG,GAAuBxD,QAAQ,GAV1E,WADF,UAgBmB,OAAdD,IACTyE,EAAe,uBAxBfA,EAAe,8EA4Bf,sBAAK9C,UAAWJ,EAAQT,KAAxB,UACGyC,GACC,gCACE,cAAC3B,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0B0B,EAAMpH,KAChC,cAACyF,EAAA,EAAD,CAAYC,QAAQ,QAApB,SAA4B,cAAC,IAAD,CAAYyD,OAAQ,EAAGC,OAAO,EAA9B,SAAqChC,EAAMlG,YAG3E,8BACE,cAACmI,GAAA,EAAD,CAASC,aAAW,EAAClE,QAAS,CAAEqB,OAAQrB,EAAQqB,OAAQG,QAASxB,EAAQwB,SAAW2C,MAAOjB,EAAcnC,KAAMkC,EAAiBmB,UAAU,SAASC,OAAK,EAAxJ,SACE,+BACE,eAAC7D,EAAA,EAAD,CAAQF,QAAQ,WAAWY,SAAU+B,EAAiBxC,QAASqC,EAA/D,yBACerE,EAAU7D,GADzB,UACoC6D,EAAUzD,MAD9C,sB,qGCzINoE,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJ+E,aAAchF,EAAMK,QAAQ,IAE9B4E,MAAO,CAEL7E,QAASJ,EAAMK,QAAQ,GACvB6E,aAAclF,EAAMK,QAAQ,IAC5BwB,OAAQ,OACR3B,QAAS,OACT4B,cAAe,UAEjBqD,cAAe,CACbjF,QAAS,OACTC,eAAgB,gBAChB0B,OAAQ,QAEVuD,WAAY,CACV,UAAW,CACTC,gBAAiB,oBAEnB7E,MAAO,oBACPJ,QAAS,GAEXkF,WAAY,CACVpF,QAAS,OACT4B,cAAe,SACfyD,WAAY,UAEdC,OAAQ,CACNC,MAAOzF,EAAMK,QAAQ,GACrBwB,OAAQ7B,EAAMK,QAAQ,GACtBqF,QAAS1F,EAAMK,QAAQ,MAEzBsF,QAAS,CACP,QAAS,CAAEnF,MAAO,cA+GPoF,OA3GR,YAAuF,IAArE9J,EAAoE,EAApEA,OAAQ6J,EAA4D,EAA5DA,QAASE,EAAmD,EAAnDA,MAAmD,IAA5CzI,kBAA4C,aAAxBuB,gBAAwB,MAAb,aAAa,EACrF+B,EAAUZ,KAD2E,EAE3DvC,IAAxBnB,EAFmF,EAEnFA,KAAMiB,EAF6E,EAE7EA,cAERyI,EAAMD,IAAgB/J,EAASP,OAAOC,KAAKM,GAAU,IAJgC,EAMvDoB,mBAAS,CAAE6I,GAAI,KAAMrD,MAAO,OAN2B,mBAMpF/B,EANoF,KAMxEC,EANwE,KAOrFoF,EAAkB,WACtBpF,EAAc,CAAEmF,GAAI,KAAMrD,MAAO,QARwD,EAWvDxF,mBAAS,CAAEuE,MAAM,EAAOiB,MAAO,OAXwB,mBAWpF4C,EAXoF,KAWxEW,EAXwE,KAYrFC,EAAoB,WACxBD,EAAc,CAAExE,MAAM,EAAOiB,MAAO,OACpCyD,EAAe,KAd0E,EAgBrDjJ,mBAAS,IAhB4C,mBAgBpFkJ,EAhBoF,KAgBvED,EAhBuE,KAkBrFE,GAAgBD,EAAYxJ,MAAM,wBAA0BwJ,IAAgBhK,EAAKC,KAEvF,OACE,sBAAKyE,UAAWJ,EAAQT,KAAxB,UACE,cAACc,EAAA,EAAD,CAAYC,QAAQ,KAAKF,UAAWJ,EAAQiF,QAA5C,SAAsDA,IACtD,cAACW,GAAA,EAAD,CAAMC,WAAS,EAAClG,QAAS,EAAGF,eAAe,SAA3C,SACGrE,GAAUgK,EAAIU,KAAI,SAAClL,GAAD,OACjBQ,EAAOR,IACP,cAACgL,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAArC,SACE,eAACC,GAAA,EAAD,CAAOC,UAAW,EAAGjG,UAAWJ,EAAQuE,MAAxC,UACE,sBAAKnE,UAAWJ,EAAQyE,cAAxB,UACGrJ,EAAOR,GAAI0L,SACV,mBAAGnI,KAAI,2BAAsB/C,EAAOR,GAAI0L,UAAYlI,OAAO,SAASC,IAAI,aAAxE,SACE,cAACkI,EAAA,EAAD,CAAQC,IAAG,UAAKpL,EAAOR,GAAI0L,SAAhB,SAAiCG,IAAKrL,EAAOR,GAAI8L,WAAYtG,UAAWJ,EAAQ8E,WACtF,yBAET,cAAC6B,GAAA,EAAD,CAAYvG,UAAWJ,EAAQ0E,WAAYjE,QAAS,SAACC,GACnDR,EAAc,CAAEmF,GAAI3E,EAAMC,cAAeqB,MAAOpH,KADlD,SAGE,cAAC,KAAD,SAGJ,cAACyF,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0B1F,IAC1B,cAACyF,EAAA,EAAD,CAAYC,QAAQ,QAApB,SAA6BlF,EAAOR,GAAIkB,WAfClB,QAoBjD,eAACgG,EAAA,EAAD,CACEC,SAAUZ,EAAWoF,GACrBvE,aAAW,EACXC,OAAQd,EAAWoF,GACnBrE,QAASsE,EAJX,UAME,cAACrE,GAAA,EAAD,CAAUR,QAAS,WACjBmG,UAAUC,UAAUC,UAApB,UACKxJ,OAAOC,SAASwJ,KADrB,aAC8B3L,EAAO6E,EAAW+B,OAAOjG,QADvD,YACkEkE,EAAW+B,QAE7EsD,KAJF,uBAMC5I,GAAc,eAACuE,GAAA,EAAD,CAAUR,QAAS,WAChC8E,EAAc,CAAExE,MAAM,EAAMiB,MAAO/B,EAAW+B,QAC9CsD,KAFa,yBAGCrF,EAAW+B,MAHZ,4BAKhBtF,GACC,eAACsK,GAAA,EAAD,CACEjG,OAAQ6D,EAAW7D,KACnBC,QAASwE,EAFX,UAIE,cAACyB,GAAA,EAAD,UAAa,eAAC5G,EAAA,EAAD,CAAYC,QAAQ,KAApB,yBAAsCsE,EAAW5C,MAAjD,2BACb,eAACkF,GAAA,EAAD,CAAe9G,UAAWJ,EAAQ4E,WAAlC,UACE,cAACvE,EAAA,EAAD,CAAY8G,MAAO,CAAEC,UAAW,UAAhC,6DAGA,cAAC/G,EAAA,EAAD,CAAY8G,MAAO,CAAEC,UAAW,SAAU9C,aAAc,QAAxD,SACE,mBAAGnG,KAAK,+EAA+EC,OAAO,SAASC,IAAI,aAA3G,4BAIF,cAACgJ,GAAA,EAAD,CACEC,MAAM,YACNhH,QAAQ,WACR/E,MAAOmK,EACP6B,SAAU,SAAC7G,GAAD,OAAW+E,EAAe/E,EAAMtC,OAAO7C,aAGrD,eAACiM,GAAA,EAAD,WACE,cAAChH,EAAA,EAAD,CAAQiH,WAAS,EAAChH,QAAS+E,EAAmB1F,MAAM,YAAYQ,QAAQ,WAAxE,oBACA,cAACE,EAAA,EAAD,CAAQF,QAAQ,WAAWY,SAAUyE,EAAclF,QAAO,sBAAE,sBAAAjG,EAAA,6DAC1DgL,IAD0D,kBAGlDvG,GAAqB2F,EAAW5C,MAAO0D,EAAazH,GAHF,OAIxDtB,GAAc,SAACvB,GACb,IAAMsM,EAAS,gBAAQtM,GAEvB,cADOsM,EAAU9C,EAAW5C,OACrB0F,KAP+C,gDAUxDzJ,EAAS,CAAEnC,KAAM,KAAEkH,QAAU,KAAEA,QAAd,KAA2B1E,SAAU,UAVE,yDAA5D,4BC7HNgB,GAAQqI,YAAe,CAC3BC,WAAY,CACVC,WAAY,CACV,gBACA,UACA,aACAC,KAAK,KACPC,GAAI,CACFC,UAAW,SACXC,eAAgB,YAChBxG,SAAU,OACVyG,WAAY,QAEdC,GAAI,CACF7D,aAAc,OACd2D,eAAgB,aAElBG,MAAO,CACLJ,UAAW,SACXK,WAAY,MACZC,SAAU,EACV9I,QAAS,OACT4B,cAAe,SACf3B,eAAgB,WAGpB8I,MAAO,CACL/D,aAAc,MAIZpF,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJyI,UAAW,UAEbQ,MAAO,CACLpH,cAAe,OAEjB+C,MAAO,CACLrE,MAAO,QACPmI,eAAgB,YAChBQ,OAAQ,WAEV3D,OAAQ,CACNC,MAAOzF,EAAMK,QAAQ,GACrBwB,OAAQ7B,EAAMK,QAAQ,GACtBH,QAAS,eACTkJ,cAAe,cAIbC,GAAyB,CAC7B,CAAErN,IAAK,IAAKC,MAAO,sBACnB,CAAED,IAAK,GAAIC,MAAOrB,GAClB,CAAEoB,IAAK,IAAKC,MAAO,sBACnB,CAAED,IAAK,GAAIC,MAAOrB,GAClB,CAAEoB,IAAK,IAAKC,MAAO,sBACnB,CAAED,IAAK,EAAGC,MAAOrB,GACjB,CAAEoB,IAAK,EAAGC,MAAOrB,GACjB,CAAEoB,IAAK,EAAGC,MAAOrB,GACjB,CAAEoB,IAAK,IAAKC,MAAO,sBACnB,CAAED,IAAK,GAAIC,MAAOrB,GAClB,CAAEoB,IAAK,GAAIC,MAAOrB,GAClB,CAAEoB,IAAK,IAAKC,MAAO,sBACnB,CAAED,IAAK,IAAKC,MAAO,uBAEfqN,GAAgB,CAAC,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,GAAI,IA2ItDC,OAzIf,WACE,IAAM7I,EAAUZ,KADH,EAEa5C,mBAAS,MAFtB,mBAENsM,EAFM,KAEC7K,EAFD,OAG2BzB,oBAAS,GAHpC,mBAGNuM,EAHM,KAGQC,EAHR,OAIqBxM,oBAAS,GAJ9B,mBAINyM,EAJM,KAIKC,EAJL,KAKLxM,EAAeG,IAAfH,WALK,EAO+BF,mBAAS,IAPxC,mBAON2M,EAPM,KAOUC,EAPV,KAQP3L,EAAOJ,IARA,EASyBb,mBAAS,MATlC,mBASN6M,EATM,KASOC,EATP,OAUqC9M,mBAAS,MAV9C,mBAUN+M,EAVM,KAUaC,EAVb,KAYPC,EAAmB,kBAAMT,GAAgB,IAoF/C,OAlFA/L,qBAAU,WACM,OAAV6L,GACFE,GAAgB,KAEjB,CAACF,IAEJ7L,qBAAU,WAAO,SACAyM,EADD,8EACd,WAAuBC,GAAvB,qBAAAnP,EAAA,sDACQoP,EAAkB,GAD1B,cAEsBjB,IAFtB,IAEE,2BAAW3G,EAAiC,QACrC2H,GAAuB3H,EAAMzG,QAAUrB,GAC1C0P,EAAgBC,KAAK7H,GAJ3B,0CAOEoH,EAPF,SAO0BjO,EAAUyO,GAPpC,8EADc,kEAWd,sBAAApP,EAAA,+EAGUkP,GAAQ,GAHlB,sEAKUA,GAAQ,GALlB,yDAXc,0DAoBdI,KACC,IAEH7M,qBAAU,WAAM,4CACd,sCAAAzC,EAAA,4DACQuP,EAAWtM,EAAKuM,QAAQ,IAAK,IAAIC,MAAM,MAEhCC,OAAS,GAHxB,uBAIIV,EAAqB,MAJzB,iCAQMzN,EAAUgO,EAAS,GACnBI,EAASpO,EATf,kBAa8BC,EAAeD,GAb7C,QAaUqO,EAbV,UAeMrO,EAAUqO,EAAYrO,QACtBoO,EAAS,mBAAGhM,KAAI,2BAAsBiM,EAAY9D,UAAYlI,OAAO,SAASC,IAAI,aAAzE,SACP,uBAAM8I,MAAO,CAAE3H,QAAS,gBAAxB,UACE,cAAC+G,EAAA,EAAD,CAAQC,IAAG,UAAK4D,EAAY9D,SAAjB,SAAkCG,IAAK2D,EAAYtF,OAAQ1E,UAAWJ,EAAQ8E,SACzF,sBAAMqC,MAAO,CAAEc,eAAgB,aAA/B,SAA+CmC,EAAYC,aAnBrE,6DAyBkB,KAAZtO,EAzBN,oBA0B4B,IAApBgO,EAASG,OA1BjB,uCA4BQZ,EA5BR,UA4B6BzN,EAAc,CAAEF,KAAMI,IA5BnD,0CA6BQyN,EAAqBW,GA7B7B,uGAkCcjL,EAAUnE,SAASgP,EAAS,IAlC1C,UAmC6B5O,EAAU,CAAC,CAAEG,IAAK4D,EAAS3D,MAAOQ,KAnC/D,WAmCcX,EAnCd,SAoCYP,OAAOC,KAAKM,GAAQ8O,OAAS,GApCzC,wBAqCUZ,EAAelO,GACfoO,EAAqBtK,GAtC/B,sFA6CEoK,EAAe,MACfE,EAAqB,MA9CvB,2EADc,uBAAC,WAAD,wBAkDdE,KACC,CAACjM,IAGF,eAAC,IAAM8C,SAAP,WACE,cAAC+J,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAejL,MAAOA,GAAtB,SACE,sBAAKc,UAAWJ,EAAQT,KAAxB,UACE,cAAC,GAAD,CAAatB,SAAUA,IACvB,eAACuM,EAAA,EAAD,WACE,cAACnK,EAAA,EAAD,CAAYC,QAAQ,KAAKF,UAAWJ,EAAQmE,MAAO1D,QAAS,WAC1DnD,OAAOmN,QAAQC,UAAU,KAAM,QAAS,KACxC,IAAMC,EAAgB,IAAIC,cAAc,YACxCC,cAAcF,IAHhB,SAKE,cAAC,IAAD,CACE5G,OAAQ,EACR+G,YAAa,kBAAM5B,GAAa,IAFlC,qBAODD,GACC,eAAC,IAAM1I,SAAP,WACE,cAAC,GAAD,CAAMtC,SAAUA,IACO,OAAtBsL,GAA8BF,GAAe,cAAC,GAAD,CAAQjO,OAAQiO,EAAapE,QAASsE,IACpF,cAAC,GAAD,CAAQnO,OAAQ+N,EAAgBhE,MAAOyD,GAAe3D,QAAQ,aAC9D,cAAC,GAAD,CAAQ7J,OAAQsB,EAAYuI,QAAQ,WAAWvI,YAAY,EAAMuB,SAAUA,OAG9E6K,GACC,cAACiC,EAAA,EAAD,CAAUhK,KAAMgI,EAAciC,iBAAkB,IAAOhK,QAASyI,EAAhE,SACE,cAACwB,EAAA,EAAD,CAAOjK,QAASyI,EAAkBnL,SAAUwK,EAAMxK,SAAU8B,UAAWJ,EAAQwI,MAA/E,SACGM,EAAMhN,qBC5MVoP,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB1Q,MAAK,YAAkD,IAA/C2Q,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACtP,EAAD,UACE,cAAC,GAAD,QAGJuP,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.27661ef4.chunk.js","sourcesContent":["import { config } from \"@onflow/fcl\";\n\nconfig()\n  .put(\"accessNode.api\", process.env.REACT_APP_ACCESS_NODE) // Configure FCL's Access Node\n  .put(\"discovery.wallet\", process.env.REACT_APP_WALLET_DISCOVERY)\n  .put(\"discover.authn.endpoint\", process.env.REACT_APP_WALLET_DISCOVERY_API)\n  .put(\"app.detail.title\", \"Bitku\")\n  .put(\"app.detail.icon\", \"https://bitku.art/logo512.png\")\n\n\nexport let FEATURED_ADDRESS = \"\";\nexport let LOGO_URL = \"\";\nexport let FLOWSCAN_URL = \"\";\n\n\nif (process.env.REACT_APP_FLOW_NETWORK === \"emulator\") {\n  const contract_address = \"0xf8d6e0586b0a20c7\";\n  config()\n    .put(\"0xFUNGIBLETOKENADDRESS\", \"0xee82856bf20e2aa6\")\n    .put(\"0xTOKENADDRESS\", \"0x0ae53cb6e3f42a79\")\n    .put(\"0xNONFUNGIBLETOKENADDRESS\", contract_address)\n    .put(\"0xHAIKUNFTADDRESS\", contract_address)\n    .put(\"0xFUSDADDRESS\", contract_address)\n    .put(\"0xMETADATAVIEWSADDRESS\", contract_address)\n    .put(\"0xFINDADDRESS\", \"0xa16ab1d0abde3625\"); // Testnet\n\n  FEATURED_ADDRESS = contract_address;\n  LOGO_URL = \"http://localhost:3000/logo512.png\";\n  FLOWSCAN_URL = \"\";\n} else if (process.env.REACT_APP_FLOW_NETWORK === \"testnet\") {\n  const contract_address = \"0x824f612f78d34250\";\n  config()\n    .put(\"0xFUNGIBLETOKENADDRESS\", \"0x9a0766d93b6608b7\")\n    .put(\"0xTOKENADDRESS\", \"0x7e60df042a9c0868\")\n    .put(\"0xNONFUNGIBLETOKENADDRESS\", \"0x631e88ae7f1d7c20\")\n    .put(\"0xHAIKUNFTADDRESS\", contract_address)\n    .put(\"0xFUSDADDRESS\", \"0xe223d8a629e49c68\")\n    .put(\"0xMETADATAVIEWSADDRESS\", \"0x631e88ae7f1d7c20\")\n    .put(\"0xFINDADDRESS\", \"0xa16ab1d0abde3625\");\n\n  FEATURED_ADDRESS = contract_address;\n  LOGO_URL = \"https://testnet.bitku.art/logo512.png\";\n  FLOWSCAN_URL = \"https://flow-view-source.com/testnet/tx/\";\n} else if (process.env.REACT_APP_FLOW_NETWORK === \"mainnet\") {\n  const contract_address = \"0xf61e40c19db2a9e2\";\n  config()\n    .put(\"0xFUNGIBLETOKENADDRESS\", \"0xf233dcee88fe0abe\")\n    .put(\"0xTOKENADDRESS\", \"0x1654653399040a61\")\n    .put(\"0xNONFUNGIBLETOKENADDRESS\", \"0x1d7e57aa55817448\")\n    .put(\"0xHAIKUNFTADDRESS\", contract_address)\n    .put(\"0xFUSDADDRESS\", \"0x3c5959b568896393\")\n    .put(\"0xMETADATAVIEWSADDRESS\", \"0x1d7e57aa55817448\")\n    .put(\"0xFINDADDRESS\", \"0x097bafa4e0b48eef\");\n\n  FEATURED_ADDRESS = contract_address;\n  LOGO_URL = \"https://bitku.art/logo512.png\";\n  FLOWSCAN_URL = \"https://flowscan.org/transaction/\";\n}\n","import * as fcl from \"@onflow/fcl\";\nimport * as t from \"@onflow/types\";\n\nexport const GET_NEXT_ID_AND_PRICE = `\nimport HaikuNFT from 0xHAIKUNFTADDRESS\n\npub fun main(): {UInt64: UFix64} {\n\n    return {HaikuNFT.totalSupply: HaikuNFT.currentPrice()}\n}\n`;\n\nexport async function getNextIDAndPrice() {\n  const response = await fcl\n    .send([\n      fcl.script(GET_NEXT_ID_AND_PRICE)\n    ])\n    .then(fcl.decode);\n\n  const id = Object.keys(response)[0];\n  return {\n    id: parseInt(id),\n    price: parseFloat(response[id])\n  };\n}\n\nexport const GET_HAIKU = `\nimport HaikuNFT from 0xHAIKUNFTADDRESS\nimport NonFungibleToken from 0xNONFUNGIBLETOKENADDRESS\n\npub fun main(id: UInt64, address: Address): String {\n  let account = getAccount(address)\n  let capability = account.getCapability(HaikuNFT.HaikuCollectionPublicPath)\n  let ref = capability.borrow<&{HaikuNFT.HaikuCollectionPublic, NonFungibleToken.CollectionPublic}>() ?? panic(\"Could not borrow\")\n\n  return ref.borrowHaiku(id: id).text\n}\n`;\n\n// TODO: this needs to better handle a case where the bitku doesn't exist at that address anymore.\n// This wil require a change to the HaikuNFT contract (HaikuNFT.Collection.borrowNFT) to make it return\n// nil instead of panic\nexport const GET_HAIKUS = `\nimport HaikuNFT from 0xHAIKUNFTADDRESS\nimport NonFungibleToken from 0xNONFUNGIBLETOKENADDRESS\nimport FIND, Profile from 0xFINDADDRESS\n\npub fun main(haikus: { UInt64: Address }): { UInt64: { String: String } } {\n  let response: {UInt64: {String: String}} = {}\n  for id in haikus.keys {\n    let address = haikus[id]!\n    let account = getAccount(address)\n    let capability = account.getCapability(HaikuNFT.HaikuCollectionPublicPath)\n    let ref = capability.borrow<&{HaikuNFT.HaikuCollectionPublic, NonFungibleToken.CollectionPublic}>()\n    if ref == nil {\n      continue\n    }\n    let haiku = ref!.borrowHaiku(id: id)\n    if haiku == nil {\n      continue\n    }\n\n    // Include find avatar and user name if the account has a find profile\n    var findAvatar = \"\"\n    var findName = \"\"\n\n    let leaseCap = account.getCapability<&FIND.LeaseCollection{FIND.LeaseCollectionPublic}>(FIND.LeasePublicPath)\n    if leaseCap.check() {\n      let profile = Profile.find(address).asProfile()\n      if profile != nil {\n        findAvatar = profile.avatar\n        findName = profile.findName\n      }\n    }\n    \n    response[id] = {\n      \"text\": haiku!.text,\n      \"address\": address.toString(),\n      \"findName\": findName,\n      \"findAvatar\": findAvatar\n    }\n  }\n\n  return response\n}\n`;\n\n// Special version of this for emulator where FIND doesn't exist\nexport const GET_HAIKUS_EMULATOR = `\nimport HaikuNFT from 0xHAIKUNFTADDRESS\nimport NonFungibleToken from 0xNONFUNGIBLETOKENADDRESS\n\npub fun main(haikus: { UInt64: Address }): { UInt64: { String: String } } {\n  let response: {UInt64: {String: String}} = {}\n  for id in haikus.keys {\n    let address = haikus[id]!\n    let account = getAccount(address)\n    let capability = account.getCapability(HaikuNFT.HaikuCollectionPublicPath)\n    let ref = capability.borrow<&{HaikuNFT.HaikuCollectionPublic, NonFungibleToken.CollectionPublic}>()\n    if ref == nil {\n      continue\n    }\n    let haiku = ref!.borrowHaiku(id: id)\n    if haiku == nil {\n      continue\n    }\n    \n    response[id] = {\n      \"text\": haiku!.text,\n      \"address\": address.toString(),\n      \"findName\": \"\",\n      \"findAvatar\": \"\"\n    }\n  }\n\n  return response\n}\n`;\n\nexport async function getHaikus(haikus) {\n  const haikuText = await fcl\n    .send([\n      fcl.script(process.env.REACT_APP_FLOW_NETWORK === \"emulator\" ? GET_HAIKUS_EMULATOR : GET_HAIKUS),\n      fcl.args([\n        fcl.arg(haikus, t.Dictionary({ key: t.UInt64, value: t.Address }))\n      ]),\n    ])\n    .then(fcl.decode);\n  return haikuText;\n}\n\nexport async function getBalance(user) {\n  const balance = await fcl\n    .send([\n      fcl.script`\n      import FungibleToken from 0xFUNGIBLETOKENADDRESS\n      import FUSD from 0xFUSDADDRESS\n      \n      pub fun main(account: Address): UFix64 {\n      \n          let vaultRef = getAccount(account)\n              .getCapability(/public/fusdBalance)\n              .borrow<&FUSD.Vault{FungibleToken.Balance}>()\n              ?? panic(\"Could not borrow Balance reference to the Vault\")\n      \n          return vaultRef.balance\n      }\n    `,\n      fcl.args([\n        fcl.arg(user.addr, t.Address), // <-- t.Address this time :)\n      ]),\n    ])\n    .then(fcl.decode);\n\n  return parseFloat(balance);\n}\n\nexport async function getUserHaikus(user) {\n  const haikus = await fcl\n    .send([\n      fcl.script`\n      import HaikuNFT from 0xHAIKUNFTADDRESS\n      import NonFungibleToken from 0xNONFUNGIBLETOKENADDRESS\n      \n      pub fun main(address: Address): {UInt64: String} {\n        let account = getAccount(address)\n        let capability = account.getCapability(HaikuNFT.HaikuCollectionPublicPath)\n        let ref = capability.borrow<&{HaikuNFT.HaikuCollectionPublic, NonFungibleToken.CollectionPublic}>() ?? panic(\"Could not borrow\")\n      \n        let haikus: {UInt64: String} = {}\n      \n        for id in ref.getIDs() {\n          let nft = ref.borrowNFT(id: id)\n          haikus[id] = ref.borrowHaiku(id: id)!.text\n        }\n      \n        return haikus\n      }\n    `,\n      fcl.args([\n        fcl.arg(user.addr, t.Address), // <-- t.Address this time :)\n      ]),\n    ])\n    .then(fcl.decode);\n\n  for (const id in haikus) {\n    haikus[id] = { text: haikus[id], address: user.addr };\n  }\n\n  return haikus;\n}\n\nexport async function getFindProfile(user) {\n  const groups = user.match(/^0x0*([a-zA-Z0-9]{0,16})$/);\n  if (groups) {\n    try {\n      return await fcl\n        .send([\n          fcl.script`\n          import FIND, Profile from 0x097bafa4e0b48eef\n  \n          pub fun main(address: Address) :  Profile.UserProfile? {\n              return Profile.find(address).asProfile()\n          }\n        `,\n          fcl.args([\n            fcl.arg(`0x${groups[1]}`, t.Address),\n          ]),\n        ])\n        .then(fcl.decode);\n    } catch { }\n  }\n\n  return await fcl\n    .send([\n      fcl.script`\n        import FIND, Profile from 0x097bafa4e0b48eef\n\n        pub fun main(name: String) :  Profile.UserProfile? {\n            return FIND.lookup(name)?.asProfile()\n        }\n      `,\n      fcl.args([\n        fcl.arg(user, t.String),\n      ]),\n    ])\n    .then(fcl.decode);\n}","import React, { useCallback, useEffect, useState, useContext } from \"react\";\nimport * as fcl from \"@onflow/fcl\";\nimport { getBalance, getUserHaikus } from \"../cadence/scripts\";\n\nconst UserStateContext = React.createContext();\n\nexport function UserStateProvider({ children }) {\n  const [balance, setBalance] = useState(0);\n  const [userHaikus, setUserHaikus] = useState(null);\n\n  return <UserStateContext.Provider value={{ balance, setBalance, userHaikus, setUserHaikus }} children={children} />\n}\n\nexport function useCurrentUser() {\n  const [user, setUser] = useState({ loggedIn: null });\n  const { balance, setBalance, userHaikus, setUserHaikus } = useContext(UserStateContext);\n\n  useEffect(() => fcl.currentUser().subscribe(setUser), []);\n\n  const updateBalance = useCallback(async () => {\n    try {\n      const balance = await getBalance(user);\n      setBalance(balance);\n    } catch {\n      setBalance(null);\n    }\n  }, [user, setBalance]);\n\n  useEffect(() => {\n    if (user.loggedIn) {\n      updateBalance();\n    } else {\n      setBalance(0);\n    }\n  }, [user, setBalance, updateBalance]);\n\n  useEffect(() => {\n    async function getHaikus() {\n      try {\n        const haikus = await getUserHaikus(user);\n        setUserHaikus(haikus);\n      } catch { }\n    }\n\n    if (user.loggedIn) {\n      getHaikus();\n    } else {\n      setUserHaikus(null);\n    }\n  }, [user, setUserHaikus]);\n\n  return { user, balance, updateBalance, userHaikus, setUserHaikus };\n}\n\nexport default useCurrentUser;","// https://stackoverflow.com/a/58443076\nimport React from \"react\";\n\nconst useReactPath = () => {\n  const [path, setPath] = React.useState(window.location.hash);\n  const listenToPopstate = () => {\n    const winPath = window.location.hash;\n    setPath(winPath);\n  };\n  React.useEffect(() => {\n    window.addEventListener(\"popstate\", listenToPopstate);\n    return () => {\n      window.removeEventListener(\"popstate\", listenToPopstate);\n    };\n  }, []);\n  return path;\n};\n\nexport default useReactPath;","import * as fcl from \"@onflow/fcl\"\nimport * as t from \"@onflow/types\";\nimport { FLOWSCAN_URL } from \"../config\";\n\nfunction showTransactionLink(txId, setError) {\n  const flowScanLink = FLOWSCAN_URL + txId;\n  setError({\n    text: <span> Transaction Submitted. View Status on&nbsp;\n      <a href={flowScanLink} target=\"_blank\" rel=\"noreferrer\">Flowscan</a>\n      .\n    </span>,\n    severity: \"success\"\n  });\n}\n\nexport const MINT_HAIKU_TRANSACTION = `\nimport FungibleToken from 0xFUNGIBLETOKENADDRESS\nimport FlowToken from 0xTOKENADDRESS\nimport FUSD from 0xFUSDADDRESS\nimport NonFungibleToken from 0xNONFUNGIBLETOKENADDRESS\nimport MetadataViews from 0xMETADATAVIEWSADDRESS\nimport HaikuNFT from 0xHAIKUNFTADDRESS\n\ntransaction (haikuID: UInt64, price: UFix64) {\n    let collection: &NonFungibleToken.Collection\n    let sentVault: @FungibleToken.Vault\n    let receiverRef: &FlowToken.Vault{FungibleToken.Receiver}\n    \n    prepare(signer: AuthAccount) {\n        // if the account doesn't already have a collection\n        if signer.borrow<&HaikuNFT.Collection>(from: HaikuNFT.HaikuCollectionStoragePath) == nil {\n\n\n            // create a new empty collection\n            let collection <- HaikuNFT.createEmptyCollection()\n            \n            // save it to the account\n            signer.save(<-collection, to: HaikuNFT.HaikuCollectionStoragePath)\n\n            // create a public capability for the collection\n            signer.link<&{NonFungibleToken.CollectionPublic, HaikuNFT.HaikuCollectionPublic, MetadataViews.ResolverCollection}>(HaikuNFT.HaikuCollectionPublicPath, target: HaikuNFT.HaikuCollectionStoragePath)\n        }\n\n        self.collection = signer.borrow<&NonFungibleToken.Collection>(from: HaikuNFT.HaikuCollectionStoragePath) \n             ?? panic(\"Could not borrow reference to NFT Collection!\")\n\n        // Get a reference to the signer's stored vault\n        let vaultRef = signer.borrow<&FUSD.Vault>(from: /storage/fusdVault)\n          ?? panic(\"Could not borrow reference to the owner's FUSD Vault!\")\n\n        // Get a reference to the signer's FLOW receiver to receive FLOW necessary to ensure they have\n        // enough storage\n        self.receiverRef =  signer\n          .getCapability(/public/flowTokenReceiver)\n          .borrow<&FlowToken.Vault{FungibleToken.Receiver}>()\n        ?? panic(\"Could not borrow receiver reference to the recipient's Vault\")\n\n        // Withdraw tokens from the signer's stored vault\n        self.sentVault <- vaultRef.withdraw(amount: price)\n    }\n\n    execute {\n        HaikuNFT.mintHaiku(recipient: self.collection, vault: <- self.sentVault, id: haikuID, flowReceiverRef: self.receiverRef)\n    }\n}\n`;\n\nexport async function mintHaikuTransaction(nextHaiku, setError) {\n  const txId = await fcl.send([\n    fcl.transaction(MINT_HAIKU_TRANSACTION),\n    fcl.args([\n      fcl.arg(nextHaiku.id, t.UInt64),\n      fcl.arg(nextHaiku.price.toFixed(8), t.UFix64),\n    ]),\n    fcl.payer(fcl.authz), // current user is responsible for paying for the transaction\n    fcl.proposer(fcl.authz), // current user acting as the nonce\n    fcl.authorizations([fcl.authz]), // current user will be first AuthAccount\n    fcl.limit(9999), // set the compute limit\n  ])\n    .then(fcl.decode);\n\n  showTransactionLink(txId, setError);\n\n  return fcl.tx(txId).onceSealed();\n}\n\n// Copied from https://docs.onflow.org/fusd/transactions/\nexport const SETUP_FUSD_VAULT = `\nimport FungibleToken from 0xFUNGIBLETOKENADDRESS\nimport FUSD from 0xFUSDADDRESS\n\ntransaction {\n\n  prepare(signer: AuthAccount) {\n\n    // It's OK if the account already has a Vault, but we don't want to replace it\n    if(signer.borrow<&FUSD.Vault>(from: /storage/fusdVault) != nil) {\n      return\n    }\n    \n    // Create a new FUSD Vault and put it in storage\n    signer.save(<-FUSD.createEmptyVault(), to: /storage/fusdVault)\n\n    // Create a public capability to the Vault that only exposes\n    // the deposit function through the Receiver interface\n    signer.link<&FUSD.Vault{FungibleToken.Receiver}>(\n      /public/fusdReceiver,\n      target: /storage/fusdVault\n    )\n\n    // Create a public capability to the Vault that only exposes\n    // the balance field through the Balance interface\n    signer.link<&FUSD.Vault{FungibleToken.Balance}>(\n      /public/fusdBalance,\n      target: /storage/fusdVault\n    )\n  }\n}\n`;\n\nexport async function setupFUSDVaultTransaction(setError) {\n  const txId = await fcl.send([\n    fcl.transaction(SETUP_FUSD_VAULT),\n    fcl.payer(fcl.authz), // current user is responsible for paying for the transaction\n    fcl.proposer(fcl.authz), // current user acting as the nonce\n    fcl.authorizations([fcl.authz]), // current user will be first AuthAccount\n    fcl.limit(99), // set the compute limit\n  ])\n    .then(fcl.decode);\n\n  showTransactionLink(txId, setError);\n\n  return fcl.tx(txId).onceSealed();\n}\n\nexport const SETUP_COLLECTION_TRANSACTION = `\nimport NonFungibleToken from 0xNONFUNGIBLETOKENADDRESS\nimport MetadataViews from 0xMETADATAVIEWSADDRESS\nimport HaikuNFT from 0xHAIKUNFTADDRESS\n\ntransaction () {\n    prepare(signer: AuthAccount) {\n        // if the account doesn't already have a collection\n        if signer.borrow<&HaikuNFT.Collection>(from: HaikuNFT.HaikuCollectionStoragePath) == nil {\n            // create a new empty collection\n            let collection <- HaikuNFT.createEmptyCollection()\n            \n            // save it to the account\n            signer.save(<-collection, to: HaikuNFT.HaikuCollectionStoragePath)\n\n            // create a public capability for the collection\n            signer.link<&{NonFungibleToken.CollectionPublic, HaikuNFT.HaikuCollectionPublic, MetadataViews.ResolverCollection}>(HaikuNFT.HaikuCollectionPublicPath, target: HaikuNFT.HaikuCollectionStoragePath)\n        }\n    }\n}\n`;\n\nexport async function setupBitkuCollectionTransaction(setError) {\n  const txId = await fcl.send([\n    fcl.transaction(SETUP_COLLECTION_TRANSACTION),\n    fcl.payer(fcl.authz), // current user is responsible for paying for the transaction\n    fcl.proposer(fcl.authz), // current user acting as the nonce\n    fcl.authorizations([fcl.authz]), // current user will be first AuthAccount\n    fcl.limit(99), // set the compute limit\n  ])\n    .then(fcl.decode);\n\n  showTransactionLink(txId, setError);\n\n  return fcl.tx(txId).onceSealed();\n}\n\nexport const SEND_BITKU_TRANSACTION = `\nimport NonFungibleToken from 0xNONFUNGIBLETOKENADDRESS\n\nimport HaikuNFT from 0xHAIKUNFTADDRESS\n\ntransaction (haikuID: UInt64, targetAddress: Address) {\n  let targetCollection: &AnyResource{NonFungibleToken.CollectionPublic}\n  let haiku: @NonFungibleToken.NFT\n  \n  prepare(signer: AuthAccount) {\n    // Get the sender's collection\n    let collection = signer.borrow<&HaikuNFT.Collection>(from: HaikuNFT.HaikuCollectionStoragePath)\n      ?? panic(\"Could not borrow reference to source account's Bitku Collection!\")\n\n    // Withdraw the haiku\n    self.haiku <- collection.withdraw(withdrawID: haikuID)\n\n    // Get the receiver's collection\n    let targetAccount = getAccount(targetAddress)\n    self.targetCollection = targetAccount.getCapability(HaikuNFT.HaikuCollectionPublicPath).borrow<&{NonFungibleToken.CollectionPublic}>()\n      ?? panic(\"Could not borrow reference to target account's Bitku Receiver!\")\n  }\n\n  execute {\n    self.targetCollection.deposit(token: <- self.haiku)\n  }\n}\n`\n\nexport async function sendBitkuTransaction(haikuID, targetAddress, setError) {\n  const txId = await fcl.send([\n    fcl.transaction(SEND_BITKU_TRANSACTION),\n    fcl.args([\n      fcl.arg(parseInt(haikuID), t.UInt64),\n      fcl.arg(targetAddress, t.Address),\n    ]),\n    fcl.payer(fcl.authz), // current user is responsible for paying for the transaction\n    fcl.proposer(fcl.authz), // current user acting as the nonce\n    fcl.authorizations([fcl.authz]), // current user will be first AuthAccount\n    fcl.limit(99), // set the compute limit\n  ])\n    .then(fcl.decode);\n\n  showTransactionLink(txId, setError);\n\n  return fcl.tx(txId).onceSealed();\n}","// File: ./src/auth-cluster.js\n\nimport React, { useState } from \"react\"\nimport * as fcl from \"@onflow/fcl\"\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Typography from '@material-ui/core/Typography';\n\nimport useCurrentUser from \"../hooks/useCurrentUser\";\nimport { setupFUSDVaultTransaction, setupBitkuCollectionTransaction } from \"../cadence/transactions\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    // position: \"absolute\",\n    // top: theme.spacing(1),\n    // right: theme.spacing(1)\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    padding: theme.spacing(1)\n  },\n  button: {\n\n  },\n  about: {\n    color: \"black\"\n  }\n}))\n\nexport function AuthCluster({ setError }) {\n  const classes = useStyles();\n  const { user, balance, updateBalance, userHaikus, setUserHaikus } = useCurrentUser();\n  const [menuAnchor, setMenuAnchor] = useState(null);\n\n  const handleClose = () => {\n    setMenuAnchor(null);\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h5\">\n        <a href=\"https://github.com/docmarionum1/bitku#readme\" target=\"_blank\" className={classes.about} rel=\"noreferrer\">\n          About\n        </a>\n      </Typography>\n      {user.loggedIn ?\n        <React.Fragment>\n          <div>\n            <Button variant=\"outlined\" onClick={(event) => { setMenuAnchor(event.currentTarget) }}>{user.addr}</Button>\n          </div>\n          <Menu\n            anchorEl={menuAnchor}\n            keepMounted\n            open={!!menuAnchor}\n            onClose={handleClose}\n          >\n            {balance === null ?\n              <MenuItem onClick={async () => {\n                handleClose();\n                await setupFUSDVaultTransaction(setError);\n                updateBalance();\n              }}>Enable FUSD on this wallet</MenuItem> :\n              <MenuItem disabled>{balance} FUSD</MenuItem>\n            }\n            {userHaikus == null && <MenuItem onClick={async () => {\n              handleClose();\n              await setupBitkuCollectionTransaction(setError);\n              setUserHaikus({});\n            }}>\n              Create empty Bitku collection\n            </MenuItem>\n            }\n            <MenuItem onClick={() => {\n              handleClose();\n              fcl.unauthenticate();\n            }}>Log Out</MenuItem>\n          </Menu>\n        </React.Fragment> :\n        <div>\n          <Button variant=\"outlined\" onClick={fcl.logIn}>Connect Wallet</Button>\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default AuthCluster;","import React, { useState, useEffect, useCallback } from \"react\"\n\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TypeWriter from 'react-typewriter';\n\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\n\nimport { LOGO_URL } from \"../config\";\nimport { getHaikus, getNextIDAndPrice } from \"../cadence/scripts\";\nimport { mintHaikuTransaction } from \"../cadence/transactions\";\nimport useCurrentUser from \"../hooks/useCurrentUser\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: \"20rem\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-evenly\"\n  },\n  popper: {\n    top: '10px !important',\n    zIndex: 100\n  },\n  tooltip: {\n    fontSize: '1rem',\n    maxWidth: 'none',\n  },\n  link: {\n    color: 'inherit'\n  }\n}));\n\nexport function Mint({ setError }) {\n  const classes = useStyles();\n\n  const [nextHaiku, setNextHaiku] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [haiku, setHaiku] = useState(null);\n  const { user, balance, updateBalance, setUserHaikus } = useCurrentUser();\n  const [rampMinPurchaseAmount, setRampMinPurchaseAmount] = useState(null);\n\n  useEffect(() => {\n    async function fetchFUSDInfo() {\n      const response = await fetch(\"https://api-instant.ramp.network/api/host-api/assets\");\n      const assets = await response.json();\n      const fusd = assets.assets.filter(asset => asset.symbol === \"FLOW_FUSD\")[0];\n\n      setRampMinPurchaseAmount(fusd.priceEur * fusd.minPurchaseAmountEur);\n    }\n\n    fetchFUSDInfo();\n  }, []);\n\n  useEffect(() => {\n    async function fetch() {\n      setLoading(true);\n      setNextHaiku(await getNextIDAndPrice());\n      setLoading(false);\n    }\n\n    if (nextHaiku === null) {\n      fetch();\n    }\n  }, [nextHaiku]);\n\n  useEffect(() => {\n    if (!user.loggedIn) {\n      setHaiku(null);\n    }\n  }, [user]);\n\n  const mintHaiku = useCallback(async () => {\n    setLoading(true);\n    try {\n      // Mint the new haiku and get the text\n      await mintHaikuTransaction(nextHaiku, setError);\n\n      window.scrollTo(0, 0);\n      const response = await getHaikus([{ key: nextHaiku.id, value: user.addr }]);\n      const text = response[Object.keys(response)[0]].text;\n\n      // Update the newly minted haiku component\n      setHaiku({\n        id: nextHaiku.id,\n        text: text,\n      });\n\n      // Add it to the user's list of haiku\n      setUserHaikus((haikus) => {\n        return { ...haikus, [nextHaiku.id]: { text: text, address: user.addr } };\n      });\n\n      setNextHaiku(null);\n      updateBalance();\n      setError(null);\n    } catch (e) {\n      const message = e.message ? e.message : e;\n      if (message !== \"Declined: Externally Halted\" && message !== \"Declined: User rejected signature\") {\n        setError({ text: message, severity: \"error\" });\n      }\n      setNextHaiku(null);\n    }\n  }, [user, nextHaiku, setError, setUserHaikus, updateBalance]);\n\n  if (loading) {\n    return (\n      <div className=\"spinner\" id=\"spinner\">\n        <div className=\"double-bounce1\"></div>\n        <div className=\"double-bounce2\"></div>\n      </div>\n    );\n  }\n\n  const mintingDisabled = !user.loggedIn || nextHaiku === null || balance === null || balance < nextHaiku.price;\n  let tooltipTitle = `Mint Bitku #${nextHaiku.id} for ${nextHaiku.price} FUSD`;\n\n  if (!user.loggedIn) {\n    tooltipTitle = \"To mint a Bitku, please connect your wallet using the menu in the top right\";\n  } else if (balance === null) {\n    tooltipTitle = \"To mint a Bitku, please enable FUSD for your wallet using the menu in the top right\";\n  } else if (balance < nextHaiku.price) {\n    tooltipTitle = <span>\n      You don't have enough FUSD.&nbsp;\n      {rampMinPurchaseAmount &&\n        <React.Fragment>\n          <a href=\"#\" className={classes.link} onClick={() => {\n            new RampInstantSDK({\n              hostAppName: 'Bitku',\n              hostLogoUrl: LOGO_URL,\n              swapAmount: Math.ceil(Math.max(nextHaiku.price - balance, rampMinPurchaseAmount) * Math.pow(10, 8)),\n              swapAsset: \"FLOW_FUSD\",\n              userAddress: user.addr,\n              fiatCurrency: \"EUR\"\n            }).show();\n          }}>\n            Buy {Math.max(nextHaiku.price - balance, rampMinPurchaseAmount).toFixed(2)} FUSD\n          </a>.\n        </React.Fragment>\n      }\n    </span>;\n  } else if (nextHaiku === null) {\n    tooltipTitle = \"No Bitkus remaining\";\n  }\n\n  return (\n    <div className={classes.root}>\n      {haiku &&\n        <div>\n          <Typography variant=\"h6\">{haiku.id}</Typography>\n          <Typography variant=\"body2\"><TypeWriter typing={1} fixed={true}>{haiku.text}</TypeWriter></Typography>\n        </div>\n      }\n      <div>\n        <Tooltip interactive classes={{ popper: classes.popper, tooltip: classes.tooltip }} title={tooltipTitle} open={mintingDisabled} placement=\"bottom\" arrow>\n          <span>\n            <Button variant=\"outlined\" disabled={mintingDisabled} onClick={mintHaiku}>\n              Mint Bitku #{nextHaiku.id}/1024 ({nextHaiku.price} FUSD)\n            </Button>\n          </span>\n        </Tooltip>\n      </div>\n    </div>\n  );\n}\n\nexport default Mint;","import React, { useState } from \"react\"\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper } from \"@material-ui/core\";\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport TextField from '@material-ui/core/TextField';\n\nimport { sendBitkuTransaction } from \"../cadence/transactions\";\nimport useCurrentUser from \"../hooks/useCurrentUser\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginBottom: theme.spacing(4),\n  },\n  paper: {\n    //width: \"fit-content\",\n    padding: theme.spacing(2),\n    borderRadius: theme.spacing(.5),\n    height: '12em',\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  menuContainer: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    height: \"10px\",\n  },\n  iconButton: {\n    '&:hover': {\n      backgroundColor: \"rgba(0, 0, 0, 0)\"\n    },\n    color: \"rgba(0, 0, 0, .4)\",\n    padding: 0\n  },\n  sendDialog: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n    margin: -theme.spacing(.75)\n  },\n  heading: {\n    \"& > *\": { color: \"black\" }\n  }\n}));\n\nexport function Haikus({ haikus, heading, order, userHaikus = false, setError = () => { } }) {\n  const classes = useStyles();\n  const { user, setUserHaikus } = useCurrentUser();\n\n  const ids = order ? order : haikus ? Object.keys(haikus) : [];\n\n  const [menuAnchor, setMenuAnchor] = useState({ el: null, haiku: null });\n  const handleCloseMenu = () => {\n    setMenuAnchor({ el: null, haiku: null });\n  };\n\n  const [sendDialog, setSendDialog] = useState({ open: false, haiku: null });\n  const handleCloseDialog = () => {\n    setSendDialog({ open: false, haiku: null });\n    setSendAddress(\"\");\n  };\n  const [sendAddress, setSendAddress] = useState(\"\");\n\n  const sendDisabled = !sendAddress.match(/^0x[a-zA-Z0-9]{16}$/) || sendAddress === user.addr;\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h4\" className={classes.heading}>{heading}</Typography>\n      <Grid container spacing={3} justifyContent=\"center\">\n        {haikus && ids.map((id) => (\n          haikus[id] &&\n          <Grid item xs={12} sm={6} md={6} lg={4} key={id}>\n            <Paper elevation={3} className={classes.paper}>\n              <div className={classes.menuContainer}>\n                {haikus[id].findName ?\n                  <a href={`https://find.xyz/${haikus[id].findName}`} target=\"_blank\" rel=\"noreferrer\">\n                    <Avatar alt={`${haikus[id].findName}.find`} src={haikus[id].findAvatar} className={classes.avatar} />\n                  </a> : <span />\n                }\n                <IconButton className={classes.iconButton} onClick={(event) => {\n                  setMenuAnchor({ el: event.currentTarget, haiku: id });\n                }}>\n                  <MenuIcon />\n                </IconButton>\n              </div>\n              <Typography variant=\"h6\">{id}</Typography>\n              <Typography variant=\"body2\">{haikus[id].text}</Typography>\n            </Paper>\n          </Grid>\n        ))}\n      </Grid>\n      <Menu\n        anchorEl={menuAnchor.el}\n        keepMounted\n        open={!!menuAnchor.el}\n        onClose={handleCloseMenu}\n      >\n        <MenuItem onClick={() => {\n          navigator.clipboard.writeText(\n            `${window.location.host}/#${haikus[menuAnchor.haiku].address}/${menuAnchor.haiku}`\n          );\n          handleCloseMenu();\n        }}>Copy link</MenuItem>\n        {userHaikus && <MenuItem onClick={() => {\n          setSendDialog({ open: true, haiku: menuAnchor.haiku });\n          handleCloseMenu();\n        }}>Send Bitku #{menuAnchor.haiku} to Another Address</MenuItem>}\n      </Menu>\n      {userHaikus &&\n        <Dialog\n          open={!!sendDialog.open}\n          onClose={handleCloseDialog}\n        >\n          <DialogTitle><Typography variant=\"h5\">Send Bitku #{sendDialog.haiku} to another address</Typography></DialogTitle>\n          <DialogContent className={classes.sendDialog}>\n            <Typography style={{ fontStyle: \"italic\" }}>\n              Ensure that the address has a Bitku collection.\n            </Typography>\n            <Typography style={{ fontStyle: \"italic\", marginBottom: \"20px\" }}>\n              <a href=\"https://github.com/docmarionum1/bitku#how-to-send-a-bitku-to-another-account\" target=\"_blank\" rel=\"noreferrer\">\n                Instructions\n              </a>\n            </Typography>\n            <TextField\n              label=\"0xaddress\"\n              variant=\"outlined\"\n              value={sendAddress}\n              onChange={(event) => setSendAddress(event.target.value)}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button autoFocus onClick={handleCloseDialog} color=\"secondary\" variant=\"outlined\">Cancel</Button>\n            <Button variant=\"outlined\" disabled={sendDisabled} onClick={async () => {\n              handleCloseDialog();\n              try {\n                await sendBitkuTransaction(sendDialog.haiku, sendAddress, setError);\n                setUserHaikus((haikus) => {\n                  const newHaikus = { ...haikus };\n                  delete newHaikus[sendDialog.haiku];\n                  return newHaikus;\n                });\n              } catch (e) {\n                setError({ text: e.message ? e.message : e, severity: \"error\" });\n              }\n            }}>Send</Button>\n          </DialogActions>\n        </Dialog>\n      }\n    </div>\n  );\n}\n\nexport default Haikus;","import React, { useState, useEffect } from \"react\";\nimport './App.css';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme, ThemeProvider, makeStyles } from '@material-ui/core/styles';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\nimport { Typography } from \"@material-ui/core\";\nimport Container from '@material-ui/core/Container';\nimport TypeWriter from 'react-typewriter';\n\n\n\nimport { useCurrentUser } from \"./hooks/useCurrentUser\";\nimport useReactPath from \"./hooks/useReactPath\";\nimport AuthCluster from \"./components/AuthCluster\";\nimport Mint from './components/Mint';\nimport Haikus from './components/Haikus';\nimport { getFindProfile, getHaikus, getUserHaikus } from './cadence/scripts';\nimport { FEATURED_ADDRESS } from \"./config\";\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: [\n      '\"Courier New\"',\n      'courier',\n      'monospace'\n    ].join(','),\n    h6: {\n      textAlign: \"center\",\n      textDecoration: \"underline\",\n      fontSize: \"1rem\",\n      fontWeight: \"bold\"\n    },\n    h4: {\n      marginBottom: \"1rem\",\n      textDecoration: \"underline\"\n    },\n    body2: {\n      textAlign: \"center\",\n      whiteSpace: \"pre\",\n      flexGrow: 1,\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n    }\n  },\n  shape: {\n    borderRadius: 32\n  }\n});\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    textAlign: \"center\"\n  },\n  alert: {\n    flexDirection: \"row\"\n  },\n  title: {\n    color: \"black\",\n    textDecoration: \"underline\",\n    cursor: \"pointer\"\n  },\n  avatar: {\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n    display: \"inline-block\",\n    verticalAlign: \"middle\"\n  },\n}));\n\nconst featuredHaikuAddresses = [\n  { key: 189, value: \"0x002c479c5c9eb30f\" }, // papavader's\n  { key: 40, value: FEATURED_ADDRESS },\n  { key: 221, value: \"0x5f563944d3f15ed7\" }, // slackhash's\n  { key: 29, value: FEATURED_ADDRESS },\n  { key: 199, value: \"0xcd642845e5f48fdd\" }, // xu's\n  { key: 0, value: FEATURED_ADDRESS },\n  { key: 4, value: FEATURED_ADDRESS },\n  { key: 5, value: FEATURED_ADDRESS },\n  { key: 180, value: \"0x877538e6851faa5d\" }, // mrpowergage's\n  { key: 28, value: FEATURED_ADDRESS },\n  { key: 41, value: FEATURED_ADDRESS },\n  { key: 900, value: \"0xc038de0c5f2cb2d4\" }, // Doesn't exist test\n  { key: 240, value: \"0x3a7a2af28d43354b\" } // bigedude's\n]\nconst featuredOrder = [189, 40, 221, 240, 29, 199, 0, 4, 5, 180, 28, 41];\n\nfunction App() {\n  const classes = useStyles();\n  const [error, setError] = useState(null);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [typingEnd, setTypingEnd] = useState(false);\n  const { userHaikus } = useCurrentUser();\n\n  const [featuredHaikus, setFeaturedHaikus] = useState({});\n  const path = useReactPath();\n  const [linkedHaiku, setLinkedHaiku] = useState(null);\n  const [linkedHaikuHeader, setLinkedHaikuHeader] = useState(null);\n\n  const handleErrorClose = () => setSnackbarOpen(false);\n\n  useEffect(() => {\n    if (error !== null) {\n      setSnackbarOpen(true);\n    }\n  }, [error]);\n\n  useEffect(() => {\n    async function getText(onlyContractAddress) {\n      const requestedHaikus = [];\n      for (const haiku of featuredHaikuAddresses) {\n        if (!onlyContractAddress || haiku.value === FEATURED_ADDRESS) {\n          requestedHaikus.push(haiku);\n        }\n      }\n      setFeaturedHaikus(await getHaikus(requestedHaikus));\n    }\n\n    async function tryGetText() {\n      // Fallback in case someone moves their bitku before mainnet is updated\n      try {\n        await getText(false);\n      } catch {\n        await getText(true)\n      }\n    }\n\n    tryGetText();\n  }, []);\n\n  useEffect(() => {\n    async function getText() {\n      const urlParts = path.replace(\"#\", \"\").split(\"/\");\n\n      if (urlParts.length < 1) {\n        setLinkedHaikuHeader(null);\n        return;\n      }\n\n      let address = urlParts[0];\n      let header = address;\n\n      // Try to link to a find profile\n      try {\n        const findProfile = await getFindProfile(address);\n        if (findProfile) {\n          address = findProfile.address;\n          header = <a href={`https://find.xyz/${findProfile.findName}`} target=\"_blank\" rel=\"noreferrer\">\n            <span style={{ display: \"inline-block\" }}>\n              <Avatar alt={`${findProfile.findName}.find`} src={findProfile.avatar} className={classes.avatar} />\n              <span style={{ textDecoration: \"underline\" }}>{findProfile.name}</span>\n            </span>\n          </a>;\n        }\n      } catch { }\n\n      if (address !== \"\") {\n        if (urlParts.length === 1) {\n          try {\n            setLinkedHaiku(await getUserHaikus({ addr: address }));\n            setLinkedHaikuHeader(header);\n            return;\n          } catch { }\n        } else {\n          try {\n            const haikuID = parseInt(urlParts[1]);\n            const haikus = await getHaikus([{ key: haikuID, value: address }]);\n            if (Object.keys(haikus).length > 0) {\n              setLinkedHaiku(haikus);\n              setLinkedHaikuHeader(haikuID);\n              return;\n            }\n          } catch { }\n        }\n      }\n\n      setLinkedHaiku(null);\n      setLinkedHaikuHeader(null);\n    }\n\n    getText();\n  }, [path]);\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <ThemeProvider theme={theme}>\n        <div className={classes.root}>\n          <AuthCluster setError={setError} />\n          <Container>\n            <Typography variant=\"h1\" className={classes.title} onClick={() => {\n              window.history.pushState(null, \"Bitku\", \"/\");\n              const popStateEvent = new PopStateEvent('popstate');\n              dispatchEvent(popStateEvent);\n            }}>\n              <TypeWriter\n                typing={1}\n                onTypingEnd={() => setTypingEnd(true)}\n              >\n                Bitku\n              </TypeWriter>\n            </Typography>\n            {typingEnd &&\n              <React.Fragment>\n                <Mint setError={setError} />\n                {linkedHaikuHeader !== null && linkedHaiku && <Haikus haikus={linkedHaiku} heading={linkedHaikuHeader} />}\n                <Haikus haikus={featuredHaikus} order={featuredOrder} heading=\"Featured\" />\n                <Haikus haikus={userHaikus} heading=\"My Bitku\" userHaikus={true} setError={setError} />\n              </React.Fragment>\n            }\n            {error &&\n              <Snackbar open={snackbarOpen} autoHideDuration={10000} onClose={handleErrorClose}>\n                <Alert onClose={handleErrorClose} severity={error.severity} className={classes.alert}>\n                  {error.text}\n                </Alert>\n              </Snackbar>\n            }\n          </Container>\n        </div>\n      </ThemeProvider>\n    </React.Fragment >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./config\"\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {UserStateProvider} from \"./hooks/useCurrentUser\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <UserStateProvider>\n      <App />\n    </UserStateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}